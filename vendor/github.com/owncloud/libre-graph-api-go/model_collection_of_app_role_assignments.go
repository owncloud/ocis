/*
Libre Graph API

Libre Graph is a free API for cloud collaboration inspired by the MS Graph API.

API version: v1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package libregraph

import (
	"encoding/json"
)

// checks if the CollectionOfAppRoleAssignments type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CollectionOfAppRoleAssignments{}

// CollectionOfAppRoleAssignments struct for CollectionOfAppRoleAssignments
type CollectionOfAppRoleAssignments struct {
	Value         []AppRoleAssignment `json:"value,omitempty"`
	OdataNextLink *string             `json:"@odata.nextLink,omitempty"`
}

// NewCollectionOfAppRoleAssignments instantiates a new CollectionOfAppRoleAssignments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionOfAppRoleAssignments() *CollectionOfAppRoleAssignments {
	this := CollectionOfAppRoleAssignments{}
	return &this
}

// NewCollectionOfAppRoleAssignmentsWithDefaults instantiates a new CollectionOfAppRoleAssignments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionOfAppRoleAssignmentsWithDefaults() *CollectionOfAppRoleAssignments {
	this := CollectionOfAppRoleAssignments{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CollectionOfAppRoleAssignments) GetValue() []AppRoleAssignment {
	if o == nil || IsNil(o.Value) {
		var ret []AppRoleAssignment
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionOfAppRoleAssignments) GetValueOk() ([]AppRoleAssignment, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CollectionOfAppRoleAssignments) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given []AppRoleAssignment and assigns it to the Value field.
func (o *CollectionOfAppRoleAssignments) SetValue(v []AppRoleAssignment) {
	o.Value = v
}

// GetOdataNextLink returns the OdataNextLink field value if set, zero value otherwise.
func (o *CollectionOfAppRoleAssignments) GetOdataNextLink() string {
	if o == nil || IsNil(o.OdataNextLink) {
		var ret string
		return ret
	}
	return *o.OdataNextLink
}

// GetOdataNextLinkOk returns a tuple with the OdataNextLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionOfAppRoleAssignments) GetOdataNextLinkOk() (*string, bool) {
	if o == nil || IsNil(o.OdataNextLink) {
		return nil, false
	}
	return o.OdataNextLink, true
}

// HasOdataNextLink returns a boolean if a field has been set.
func (o *CollectionOfAppRoleAssignments) HasOdataNextLink() bool {
	if o != nil && !IsNil(o.OdataNextLink) {
		return true
	}

	return false
}

// SetOdataNextLink gets a reference to the given string and assigns it to the OdataNextLink field.
func (o *CollectionOfAppRoleAssignments) SetOdataNextLink(v string) {
	o.OdataNextLink = &v
}

func (o CollectionOfAppRoleAssignments) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollectionOfAppRoleAssignments) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.OdataNextLink) {
		toSerialize["@odata.nextLink"] = o.OdataNextLink
	}
	return toSerialize, nil
}

type NullableCollectionOfAppRoleAssignments struct {
	value *CollectionOfAppRoleAssignments
	isSet bool
}

func (v NullableCollectionOfAppRoleAssignments) Get() *CollectionOfAppRoleAssignments {
	return v.value
}

func (v *NullableCollectionOfAppRoleAssignments) Set(val *CollectionOfAppRoleAssignments) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionOfAppRoleAssignments) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionOfAppRoleAssignments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionOfAppRoleAssignments(val *CollectionOfAppRoleAssignments) *NullableCollectionOfAppRoleAssignments {
	return &NullableCollectionOfAppRoleAssignments{value: val, isSet: true}
}

func (v NullableCollectionOfAppRoleAssignments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionOfAppRoleAssignments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
