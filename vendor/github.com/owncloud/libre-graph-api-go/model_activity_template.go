/*
Libre Graph API

Libre Graph is a free API for cloud collaboration inspired by the MS Graph API.

API version: v1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package libregraph

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ActivityTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityTemplate{}

// ActivityTemplate struct for ActivityTemplate
type ActivityTemplate struct {
	// Activity description.
	Message string `json:"message"`
	// Activity description variables.
	Variables map[string]interface{} `json:"variables,omitempty"`
}

type _ActivityTemplate ActivityTemplate

// NewActivityTemplate instantiates a new ActivityTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityTemplate(message string) *ActivityTemplate {
	this := ActivityTemplate{}
	this.Message = message
	return &this
}

// NewActivityTemplateWithDefaults instantiates a new ActivityTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityTemplateWithDefaults() *ActivityTemplate {
	this := ActivityTemplate{}
	return &this
}

// GetMessage returns the Message field value
func (o *ActivityTemplate) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ActivityTemplate) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ActivityTemplate) SetMessage(v string) {
	o.Message = v
}

// GetVariables returns the Variables field value if set, zero value otherwise.
func (o *ActivityTemplate) GetVariables() map[string]interface{} {
	if o == nil || IsNil(o.Variables) {
		var ret map[string]interface{}
		return ret
	}
	return o.Variables
}

// GetVariablesOk returns a tuple with the Variables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityTemplate) GetVariablesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Variables) {
		return map[string]interface{}{}, false
	}
	return o.Variables, true
}

// HasVariables returns a boolean if a field has been set.
func (o *ActivityTemplate) HasVariables() bool {
	if o != nil && !IsNil(o.Variables) {
		return true
	}

	return false
}

// SetVariables gets a reference to the given map[string]interface{} and assigns it to the Variables field.
func (o *ActivityTemplate) SetVariables(v map[string]interface{}) {
	o.Variables = v
}

func (o ActivityTemplate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.Message
	if !IsNil(o.Variables) {
		toSerialize["variables"] = o.Variables
	}
	return toSerialize, nil
}

func (o *ActivityTemplate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varActivityTemplate := _ActivityTemplate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varActivityTemplate)

	if err != nil {
		return err
	}

	*o = ActivityTemplate(varActivityTemplate)

	return err
}

type NullableActivityTemplate struct {
	value *ActivityTemplate
	isSet bool
}

func (v NullableActivityTemplate) Get() *ActivityTemplate {
	return v.value
}

func (v *NullableActivityTemplate) Set(val *ActivityTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityTemplate(val *ActivityTemplate) *NullableActivityTemplate {
	return &NullableActivityTemplate{value: val, isSet: true}
}

func (v NullableActivityTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
