/*
Libre Graph API

Libre Graph is a free API for cloud collaboration inspired by the MS Graph API.

API version: v1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package libregraph

import (
	"encoding/json"
	"time"
)

// checks if the DriveItemInvite type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DriveItemInvite{}

// DriveItemInvite struct for DriveItemInvite
type DriveItemInvite struct {
	// A collection of recipients who will receive access and the sharing invitation. Currently, only internal users or groups are supported.
	Recipients []DriveRecipient `json:"recipients,omitempty"`
	// Specifies the roles that are to be granted to the recipients of the sharing invitation.
	Roles []string `json:"roles,omitempty"`
	// Specifies the actions that are to be granted to the recipients of the sharing invitation, in effect creating a custom role.
	LibreGraphPermissionsActions []string `json:"@libre.graph.permissions.actions,omitempty"`
	// Specifies the dateTime after which the permission expires.
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
}

// NewDriveItemInvite instantiates a new DriveItemInvite object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDriveItemInvite() *DriveItemInvite {
	this := DriveItemInvite{}
	return &this
}

// NewDriveItemInviteWithDefaults instantiates a new DriveItemInvite object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDriveItemInviteWithDefaults() *DriveItemInvite {
	this := DriveItemInvite{}
	return &this
}

// GetRecipients returns the Recipients field value if set, zero value otherwise.
func (o *DriveItemInvite) GetRecipients() []DriveRecipient {
	if o == nil || IsNil(o.Recipients) {
		var ret []DriveRecipient
		return ret
	}
	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriveItemInvite) GetRecipientsOk() ([]DriveRecipient, bool) {
	if o == nil || IsNil(o.Recipients) {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *DriveItemInvite) HasRecipients() bool {
	if o != nil && !IsNil(o.Recipients) {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given []DriveRecipient and assigns it to the Recipients field.
func (o *DriveItemInvite) SetRecipients(v []DriveRecipient) {
	o.Recipients = v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *DriveItemInvite) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriveItemInvite) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *DriveItemInvite) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *DriveItemInvite) SetRoles(v []string) {
	o.Roles = v
}

// GetLibreGraphPermissionsActions returns the LibreGraphPermissionsActions field value if set, zero value otherwise.
func (o *DriveItemInvite) GetLibreGraphPermissionsActions() []string {
	if o == nil || IsNil(o.LibreGraphPermissionsActions) {
		var ret []string
		return ret
	}
	return o.LibreGraphPermissionsActions
}

// GetLibreGraphPermissionsActionsOk returns a tuple with the LibreGraphPermissionsActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriveItemInvite) GetLibreGraphPermissionsActionsOk() ([]string, bool) {
	if o == nil || IsNil(o.LibreGraphPermissionsActions) {
		return nil, false
	}
	return o.LibreGraphPermissionsActions, true
}

// HasLibreGraphPermissionsActions returns a boolean if a field has been set.
func (o *DriveItemInvite) HasLibreGraphPermissionsActions() bool {
	if o != nil && !IsNil(o.LibreGraphPermissionsActions) {
		return true
	}

	return false
}

// SetLibreGraphPermissionsActions gets a reference to the given []string and assigns it to the LibreGraphPermissionsActions field.
func (o *DriveItemInvite) SetLibreGraphPermissionsActions(v []string) {
	o.LibreGraphPermissionsActions = v
}

// GetExpirationDateTime returns the ExpirationDateTime field value if set, zero value otherwise.
func (o *DriveItemInvite) GetExpirationDateTime() time.Time {
	if o == nil || IsNil(o.ExpirationDateTime) {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDateTime
}

// GetExpirationDateTimeOk returns a tuple with the ExpirationDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriveItemInvite) GetExpirationDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpirationDateTime) {
		return nil, false
	}
	return o.ExpirationDateTime, true
}

// HasExpirationDateTime returns a boolean if a field has been set.
func (o *DriveItemInvite) HasExpirationDateTime() bool {
	if o != nil && !IsNil(o.ExpirationDateTime) {
		return true
	}

	return false
}

// SetExpirationDateTime gets a reference to the given time.Time and assigns it to the ExpirationDateTime field.
func (o *DriveItemInvite) SetExpirationDateTime(v time.Time) {
	o.ExpirationDateTime = &v
}

func (o DriveItemInvite) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DriveItemInvite) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Recipients) {
		toSerialize["recipients"] = o.Recipients
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.LibreGraphPermissionsActions) {
		toSerialize["@libre.graph.permissions.actions"] = o.LibreGraphPermissionsActions
	}
	if !IsNil(o.ExpirationDateTime) {
		toSerialize["expirationDateTime"] = o.ExpirationDateTime
	}
	return toSerialize, nil
}

type NullableDriveItemInvite struct {
	value *DriveItemInvite
	isSet bool
}

func (v NullableDriveItemInvite) Get() *DriveItemInvite {
	return v.value
}

func (v *NullableDriveItemInvite) Set(val *DriveItemInvite) {
	v.value = val
	v.isSet = true
}

func (v NullableDriveItemInvite) IsSet() bool {
	return v.isSet
}

func (v *NullableDriveItemInvite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDriveItemInvite(val *DriveItemInvite) *NullableDriveItemInvite {
	return &NullableDriveItemInvite{value: val, isSet: true}
}

func (v NullableDriveItemInvite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDriveItemInvite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
