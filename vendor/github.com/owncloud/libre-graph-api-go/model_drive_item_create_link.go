/*
Libre Graph API

Libre Graph is a free API for cloud collaboration inspired by the MS Graph API.

API version: v1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package libregraph

import (
	"encoding/json"
	"time"
)

// checks if the DriveItemCreateLink type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DriveItemCreateLink{}

// DriveItemCreateLink struct for DriveItemCreateLink
type DriveItemCreateLink struct {
	Type *SharingLinkType `json:"type,omitempty"`
	// Optional. A String with format of yyyy-MM-ddTHH:mm:ssZ of DateTime indicates the expiration time of the permission.
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
	// Optional.The password of the sharing link that is set by the creator.
	Password *string `json:"password,omitempty"`
	// Provides a user-visible display name of the link. Optional. Libregraph only.
	DisplayName *string `json:"displayName,omitempty"`
	// The quicklink property can be assigned to only one link per resource. A quicklink can be used in the clients to provide a one-click copy to clipboard action. Optional. Libregraph only.
	LibreGraphQuickLink *bool `json:"@libre.graph.quickLink,omitempty"`
}

// NewDriveItemCreateLink instantiates a new DriveItemCreateLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDriveItemCreateLink() *DriveItemCreateLink {
	this := DriveItemCreateLink{}
	return &this
}

// NewDriveItemCreateLinkWithDefaults instantiates a new DriveItemCreateLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDriveItemCreateLinkWithDefaults() *DriveItemCreateLink {
	this := DriveItemCreateLink{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DriveItemCreateLink) GetType() SharingLinkType {
	if o == nil || IsNil(o.Type) {
		var ret SharingLinkType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriveItemCreateLink) GetTypeOk() (*SharingLinkType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DriveItemCreateLink) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given SharingLinkType and assigns it to the Type field.
func (o *DriveItemCreateLink) SetType(v SharingLinkType) {
	o.Type = &v
}

// GetExpirationDateTime returns the ExpirationDateTime field value if set, zero value otherwise.
func (o *DriveItemCreateLink) GetExpirationDateTime() time.Time {
	if o == nil || IsNil(o.ExpirationDateTime) {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDateTime
}

// GetExpirationDateTimeOk returns a tuple with the ExpirationDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriveItemCreateLink) GetExpirationDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpirationDateTime) {
		return nil, false
	}
	return o.ExpirationDateTime, true
}

// HasExpirationDateTime returns a boolean if a field has been set.
func (o *DriveItemCreateLink) HasExpirationDateTime() bool {
	if o != nil && !IsNil(o.ExpirationDateTime) {
		return true
	}

	return false
}

// SetExpirationDateTime gets a reference to the given time.Time and assigns it to the ExpirationDateTime field.
func (o *DriveItemCreateLink) SetExpirationDateTime(v time.Time) {
	o.ExpirationDateTime = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *DriveItemCreateLink) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriveItemCreateLink) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *DriveItemCreateLink) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *DriveItemCreateLink) SetPassword(v string) {
	o.Password = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *DriveItemCreateLink) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriveItemCreateLink) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *DriveItemCreateLink) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *DriveItemCreateLink) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetLibreGraphQuickLink returns the LibreGraphQuickLink field value if set, zero value otherwise.
func (o *DriveItemCreateLink) GetLibreGraphQuickLink() bool {
	if o == nil || IsNil(o.LibreGraphQuickLink) {
		var ret bool
		return ret
	}
	return *o.LibreGraphQuickLink
}

// GetLibreGraphQuickLinkOk returns a tuple with the LibreGraphQuickLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriveItemCreateLink) GetLibreGraphQuickLinkOk() (*bool, bool) {
	if o == nil || IsNil(o.LibreGraphQuickLink) {
		return nil, false
	}
	return o.LibreGraphQuickLink, true
}

// HasLibreGraphQuickLink returns a boolean if a field has been set.
func (o *DriveItemCreateLink) HasLibreGraphQuickLink() bool {
	if o != nil && !IsNil(o.LibreGraphQuickLink) {
		return true
	}

	return false
}

// SetLibreGraphQuickLink gets a reference to the given bool and assigns it to the LibreGraphQuickLink field.
func (o *DriveItemCreateLink) SetLibreGraphQuickLink(v bool) {
	o.LibreGraphQuickLink = &v
}

func (o DriveItemCreateLink) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DriveItemCreateLink) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.ExpirationDateTime) {
		toSerialize["expirationDateTime"] = o.ExpirationDateTime
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.LibreGraphQuickLink) {
		toSerialize["@libre.graph.quickLink"] = o.LibreGraphQuickLink
	}
	return toSerialize, nil
}

type NullableDriveItemCreateLink struct {
	value *DriveItemCreateLink
	isSet bool
}

func (v NullableDriveItemCreateLink) Get() *DriveItemCreateLink {
	return v.value
}

func (v *NullableDriveItemCreateLink) Set(val *DriveItemCreateLink) {
	v.value = val
	v.isSet = true
}

func (v NullableDriveItemCreateLink) IsSet() bool {
	return v.isSet
}

func (v *NullableDriveItemCreateLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDriveItemCreateLink(val *DriveItemCreateLink) *NullableDriveItemCreateLink {
	return &NullableDriveItemCreateLink{value: val, isSet: true}
}

func (v NullableDriveItemCreateLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDriveItemCreateLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
