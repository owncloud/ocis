/*
Libre Graph API

Libre Graph is a free API for cloud collaboration inspired by the MS Graph API.

API version: v1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package libregraph

import (
	"encoding/json"
)

// checks if the CollectionOfClass type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CollectionOfClass{}

// CollectionOfClass struct for CollectionOfClass
type CollectionOfClass struct {
	Value []EducationClass `json:"value,omitempty"`
}

// NewCollectionOfClass instantiates a new CollectionOfClass object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionOfClass() *CollectionOfClass {
	this := CollectionOfClass{}
	return &this
}

// NewCollectionOfClassWithDefaults instantiates a new CollectionOfClass object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionOfClassWithDefaults() *CollectionOfClass {
	this := CollectionOfClass{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CollectionOfClass) GetValue() []EducationClass {
	if o == nil || IsNil(o.Value) {
		var ret []EducationClass
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionOfClass) GetValueOk() ([]EducationClass, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CollectionOfClass) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given []EducationClass and assigns it to the Value field.
func (o *CollectionOfClass) SetValue(v []EducationClass) {
	o.Value = v
}

func (o CollectionOfClass) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollectionOfClass) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableCollectionOfClass struct {
	value *CollectionOfClass
	isSet bool
}

func (v NullableCollectionOfClass) Get() *CollectionOfClass {
	return v.value
}

func (v *NullableCollectionOfClass) Set(val *CollectionOfClass) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionOfClass) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionOfClass) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionOfClass(val *CollectionOfClass) *NullableCollectionOfClass {
	return &NullableCollectionOfClass{value: val, isSet: true}
}

func (v NullableCollectionOfClass) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionOfClass) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
