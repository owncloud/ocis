// Copyright 2018-2019 CERN
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// In applying this license, CERN does not waive the privileges and immunities
// granted to it by virtue of its status as an Intergovernmental Organization
// or submit itself to any jurisdiction.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: cs3/app/registry/v1beta1/resources.proto

package registryv1beta1

import (
	v1beta1 "github.com/cs3org/go-cs3apis/cs3/types/v1beta1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// REQUIRED.
// The capability of the underlying app.
type ProviderInfo_Capability int32

const (
	ProviderInfo_CAPABILITY_INVALID ProviderInfo_Capability = 0
	// The app is a simple viewer.
	ProviderInfo_CAPABILITY_VIEWER ProviderInfo_Capability = 1
	// The app is a full editor.
	ProviderInfo_CAPABILITY_EDITOR ProviderInfo_Capability = 2
)

// Enum value maps for ProviderInfo_Capability.
var (
	ProviderInfo_Capability_name = map[int32]string{
		0: "CAPABILITY_INVALID",
		1: "CAPABILITY_VIEWER",
		2: "CAPABILITY_EDITOR",
	}
	ProviderInfo_Capability_value = map[string]int32{
		"CAPABILITY_INVALID": 0,
		"CAPABILITY_VIEWER":  1,
		"CAPABILITY_EDITOR":  2,
	}
)

func (x ProviderInfo_Capability) Enum() *ProviderInfo_Capability {
	p := new(ProviderInfo_Capability)
	*p = x
	return p
}

func (x ProviderInfo_Capability) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProviderInfo_Capability) Descriptor() protoreflect.EnumDescriptor {
	return file_cs3_app_registry_v1beta1_resources_proto_enumTypes[0].Descriptor()
}

func (ProviderInfo_Capability) Type() protoreflect.EnumType {
	return &file_cs3_app_registry_v1beta1_resources_proto_enumTypes[0]
}

func (x ProviderInfo_Capability) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProviderInfo_Capability.Descriptor instead.
func (ProviderInfo_Capability) EnumDescriptor() ([]byte, []int) {
	return file_cs3_app_registry_v1beta1_resources_proto_rawDescGZIP(), []int{0, 0}
}

// Represents the information of the app provider.
type ProviderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The mimetypes handled by this provider.
	MimeTypes []string `protobuf:"bytes,2,rep,name=mime_types,json=mimeTypes,proto3" json:"mime_types,omitempty"`
	// REQUIRED.
	// The address where the app provider can be reached.
	// For example, localhost:1099.
	Address    string                  `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Capability ProviderInfo_Capability `protobuf:"varint,4,opt,name=capability,proto3,enum=cs3.app.registry.v1beta1.ProviderInfo_Capability" json:"capability,omitempty"`
	// OPTIONAL.
	// A human-readable name of the underlying app.
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// OPTIONAL.
	// Information to describe the functionalities
	// offered by the underlying app. Meant to be read
	// by humans.
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// OPTIONAL.
	// A URI to a static asset which represents the app icon.
	Icon string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	// OPTIONAL.
	// Whether the app can be opened only on desktop
	DesktopOnly bool `protobuf:"varint,8,opt,name=desktop_only,json=desktopOnly,proto3" json:"desktop_only,omitempty"`
	// OPTIONAL.
	// The action to be displayed to the user on the context menu.
	// By default this is "Open with".
	Action string `protobuf:"bytes,9,opt,name=action,proto3" json:"action,omitempty"`
	// REQUIRED.
	// The product name of the underlying app, to be used to handle
	// product-specific differences.
	// For example: Collabora, OnlyOffice, Microsoft365 or MicrosoftOfficeOnline
	ProductName string `protobuf:"bytes,10,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
}

func (x *ProviderInfo) Reset() {
	*x = ProviderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_app_registry_v1beta1_resources_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderInfo) ProtoMessage() {}

func (x *ProviderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_app_registry_v1beta1_resources_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderInfo.ProtoReflect.Descriptor instead.
func (*ProviderInfo) Descriptor() ([]byte, []int) {
	return file_cs3_app_registry_v1beta1_resources_proto_rawDescGZIP(), []int{0}
}

func (x *ProviderInfo) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *ProviderInfo) GetMimeTypes() []string {
	if x != nil {
		return x.MimeTypes
	}
	return nil
}

func (x *ProviderInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ProviderInfo) GetCapability() ProviderInfo_Capability {
	if x != nil {
		return x.Capability
	}
	return ProviderInfo_CAPABILITY_INVALID
}

func (x *ProviderInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProviderInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProviderInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ProviderInfo) GetDesktopOnly() bool {
	if x != nil {
		return x.DesktopOnly
	}
	return false
}

func (x *ProviderInfo) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ProviderInfo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

// Represents a mime type and its corresponding file extension.
type MimeTypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The mime type.
	MimeType string `protobuf:"bytes,2,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	// REQUIRED.
	// The file extension mapped to this mime type.
	Ext string `protobuf:"bytes,3,opt,name=ext,proto3" json:"ext,omitempty"`
	// REQUIRED.
	// The list of app providers which can open this mime type
	AppProviders []*ProviderInfo `protobuf:"bytes,4,rep,name=app_providers,json=appProviders,proto3" json:"app_providers,omitempty"`
	// OPTIONAL.
	// The friendly name of this mime type.
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// OPTIONAL.
	// Human-readable information to describe the mime type.
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// OPTIONAL.
	// A URI to a static asset which represents the mime type icon.
	Icon string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	// OPTIONAL.
	// Whether the mime type is eligible for file creation in the web UI.
	// Defaults to false, i.e. files with this mime type can be opened
	// but not directly created from the web UI.
	AllowCreation bool `protobuf:"varint,8,opt,name=allow_creation,json=allowCreation,proto3" json:"allow_creation,omitempty"`
	// OPTIONAL.
	// name of the default application to open this mime type
	DefaultApplication string `protobuf:"bytes,9,opt,name=default_application,json=defaultApplication,proto3" json:"default_application,omitempty"`
}

func (x *MimeTypeInfo) Reset() {
	*x = MimeTypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_app_registry_v1beta1_resources_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MimeTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MimeTypeInfo) ProtoMessage() {}

func (x *MimeTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_app_registry_v1beta1_resources_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MimeTypeInfo.ProtoReflect.Descriptor instead.
func (*MimeTypeInfo) Descriptor() ([]byte, []int) {
	return file_cs3_app_registry_v1beta1_resources_proto_rawDescGZIP(), []int{1}
}

func (x *MimeTypeInfo) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *MimeTypeInfo) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *MimeTypeInfo) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *MimeTypeInfo) GetAppProviders() []*ProviderInfo {
	if x != nil {
		return x.AppProviders
	}
	return nil
}

func (x *MimeTypeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MimeTypeInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MimeTypeInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MimeTypeInfo) GetAllowCreation() bool {
	if x != nil {
		return x.AllowCreation
	}
	return false
}

func (x *MimeTypeInfo) GetDefaultApplication() string {
	if x != nil {
		return x.DefaultApplication
	}
	return ""
}

var File_cs3_app_registry_v1beta1_resources_proto protoreflect.FileDescriptor

var file_cs3_app_registry_v1beta1_resources_proto_rawDesc = []byte{
	0x0a, 0x28, 0x63, 0x73, 0x33, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x63, 0x73, 0x33, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x1a, 0x1d, 0x63, 0x73, 0x33, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x03, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52,
	0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6d, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x51, 0x0a, 0x0a, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x4f, 0x6e, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x0a, 0x43,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x41, 0x50,
	0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x41, 0x50, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f,
	0x56, 0x49, 0x45, 0x57, 0x45, 0x52, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x41, 0x50, 0x41,
	0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x4f, 0x52, 0x10, 0x02, 0x22,
	0xdf, 0x02, 0x0a, 0x0c, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x61,
	0x71, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x78, 0x74, 0x12, 0x4b, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x73, 0x33, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2f, 0x0a, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0xf8, 0x01, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x42, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x73, 0x33, 0x6f, 0x72, 0x67, 0x2f, 0x67, 0x6f, 0x2d, 0x63, 0x73, 0x33, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x63, 0x73, 0x33, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x3b, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x41,
	0x52, 0xaa, 0x02, 0x18, 0x43, 0x73, 0x33, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x2e, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xca, 0x02, 0x18, 0x43,
	0x73, 0x33, 0x5c, 0x41, 0x70, 0x70, 0x5c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5c,
	0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xe2, 0x02, 0x24, 0x43, 0x73, 0x33, 0x5c, 0x41, 0x70,
	0x70, 0x5c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x1b, 0x43, 0x73, 0x33, 0x3a, 0x3a, 0x41, 0x70, 0x70, 0x3a, 0x3a, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cs3_app_registry_v1beta1_resources_proto_rawDescOnce sync.Once
	file_cs3_app_registry_v1beta1_resources_proto_rawDescData = file_cs3_app_registry_v1beta1_resources_proto_rawDesc
)

func file_cs3_app_registry_v1beta1_resources_proto_rawDescGZIP() []byte {
	file_cs3_app_registry_v1beta1_resources_proto_rawDescOnce.Do(func() {
		file_cs3_app_registry_v1beta1_resources_proto_rawDescData = protoimpl.X.CompressGZIP(file_cs3_app_registry_v1beta1_resources_proto_rawDescData)
	})
	return file_cs3_app_registry_v1beta1_resources_proto_rawDescData
}

var file_cs3_app_registry_v1beta1_resources_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cs3_app_registry_v1beta1_resources_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_cs3_app_registry_v1beta1_resources_proto_goTypes = []interface{}{
	(ProviderInfo_Capability)(0), // 0: cs3.app.registry.v1beta1.ProviderInfo.Capability
	(*ProviderInfo)(nil),         // 1: cs3.app.registry.v1beta1.ProviderInfo
	(*MimeTypeInfo)(nil),         // 2: cs3.app.registry.v1beta1.MimeTypeInfo
	(*v1beta1.Opaque)(nil),       // 3: cs3.types.v1beta1.Opaque
}
var file_cs3_app_registry_v1beta1_resources_proto_depIdxs = []int32{
	3, // 0: cs3.app.registry.v1beta1.ProviderInfo.opaque:type_name -> cs3.types.v1beta1.Opaque
	0, // 1: cs3.app.registry.v1beta1.ProviderInfo.capability:type_name -> cs3.app.registry.v1beta1.ProviderInfo.Capability
	3, // 2: cs3.app.registry.v1beta1.MimeTypeInfo.opaque:type_name -> cs3.types.v1beta1.Opaque
	1, // 3: cs3.app.registry.v1beta1.MimeTypeInfo.app_providers:type_name -> cs3.app.registry.v1beta1.ProviderInfo
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_cs3_app_registry_v1beta1_resources_proto_init() }
func file_cs3_app_registry_v1beta1_resources_proto_init() {
	if File_cs3_app_registry_v1beta1_resources_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cs3_app_registry_v1beta1_resources_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_app_registry_v1beta1_resources_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MimeTypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cs3_app_registry_v1beta1_resources_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cs3_app_registry_v1beta1_resources_proto_goTypes,
		DependencyIndexes: file_cs3_app_registry_v1beta1_resources_proto_depIdxs,
		EnumInfos:         file_cs3_app_registry_v1beta1_resources_proto_enumTypes,
		MessageInfos:      file_cs3_app_registry_v1beta1_resources_proto_msgTypes,
	}.Build()
	File_cs3_app_registry_v1beta1_resources_proto = out.File
	file_cs3_app_registry_v1beta1_resources_proto_rawDesc = nil
	file_cs3_app_registry_v1beta1_resources_proto_goTypes = nil
	file_cs3_app_registry_v1beta1_resources_proto_depIdxs = nil
}
