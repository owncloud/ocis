// Copyright 2018-2019 CERN
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// In applying this license, CERN does not waive the privileges and immunities
// granted to it by virtue of its status as an Intergovernmental Organization
// or submit itself to any jurisdiction.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: cs3/sharing/ocm/v1beta1/ocm_api.proto

package ocmv1beta1

import (
	v1beta14 "github.com/cs3org/go-cs3apis/cs3/identity/user/v1beta1"
	v1beta12 "github.com/cs3org/go-cs3apis/cs3/ocm/provider/v1beta1"
	v1beta13 "github.com/cs3org/go-cs3apis/cs3/rpc/v1beta1"
	v1beta11 "github.com/cs3org/go-cs3apis/cs3/storage/provider/v1beta1"
	v1beta1 "github.com/cs3org/go-cs3apis/cs3/types/v1beta1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// REQUIRED.
// The filter to apply.
type ListOCMSharesRequest_Filter_Type int32

const (
	ListOCMSharesRequest_Filter_TYPE_INVALID          ListOCMSharesRequest_Filter_Type = 0
	ListOCMSharesRequest_Filter_TYPE_NO               ListOCMSharesRequest_Filter_Type = 1
	ListOCMSharesRequest_Filter_TYPE_RESOURCE_ID      ListOCMSharesRequest_Filter_Type = 2
	ListOCMSharesRequest_Filter_TYPE_OWNER            ListOCMSharesRequest_Filter_Type = 3
	ListOCMSharesRequest_Filter_TYPE_CREATOR          ListOCMSharesRequest_Filter_Type = 4
	ListOCMSharesRequest_Filter_TYPE_OWNER_PROVIDER   ListOCMSharesRequest_Filter_Type = 5
	ListOCMSharesRequest_Filter_TYPE_CREATOR_PROVIDER ListOCMSharesRequest_Filter_Type = 6
)

// Enum value maps for ListOCMSharesRequest_Filter_Type.
var (
	ListOCMSharesRequest_Filter_Type_name = map[int32]string{
		0: "TYPE_INVALID",
		1: "TYPE_NO",
		2: "TYPE_RESOURCE_ID",
		3: "TYPE_OWNER",
		4: "TYPE_CREATOR",
		5: "TYPE_OWNER_PROVIDER",
		6: "TYPE_CREATOR_PROVIDER",
	}
	ListOCMSharesRequest_Filter_Type_value = map[string]int32{
		"TYPE_INVALID":          0,
		"TYPE_NO":               1,
		"TYPE_RESOURCE_ID":      2,
		"TYPE_OWNER":            3,
		"TYPE_CREATOR":          4,
		"TYPE_OWNER_PROVIDER":   5,
		"TYPE_CREATOR_PROVIDER": 6,
	}
)

func (x ListOCMSharesRequest_Filter_Type) Enum() *ListOCMSharesRequest_Filter_Type {
	p := new(ListOCMSharesRequest_Filter_Type)
	*p = x
	return p
}

func (x ListOCMSharesRequest_Filter_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListOCMSharesRequest_Filter_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_enumTypes[0].Descriptor()
}

func (ListOCMSharesRequest_Filter_Type) Type() protoreflect.EnumType {
	return &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_enumTypes[0]
}

func (x ListOCMSharesRequest_Filter_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListOCMSharesRequest_Filter_Type.Descriptor instead.
func (ListOCMSharesRequest_Filter_Type) EnumDescriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{4, 0, 0}
}

type CreateOCMShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The unique identifier for the shared storage resource.
	ResourceId *v1beta11.ResourceId `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// REQUIRED.
	// The grantee for the share.
	Grantee *v1beta11.Grantee `protobuf:"bytes,3,opt,name=grantee,proto3" json:"grantee,omitempty"`
	// REQUIRED.
	// The details of the recipient user's mesh provider.
	RecipientMeshProvider *v1beta12.ProviderInfo `protobuf:"bytes,4,opt,name=recipient_mesh_provider,json=recipientMeshProvider,proto3" json:"recipient_mesh_provider,omitempty"`
	// REQUIRED.
	AccessMethods []*AccessMethod `protobuf:"bytes,5,rep,name=access_methods,json=accessMethods,proto3" json:"access_methods,omitempty"`
	// OPTIONAL.
	// The expiration time for the ocm share.
	Expiration *v1beta1.Timestamp `protobuf:"bytes,6,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *CreateOCMShareRequest) Reset() {
	*x = CreateOCMShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOCMShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOCMShareRequest) ProtoMessage() {}

func (x *CreateOCMShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOCMShareRequest.ProtoReflect.Descriptor instead.
func (*CreateOCMShareRequest) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{0}
}

func (x *CreateOCMShareRequest) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *CreateOCMShareRequest) GetResourceId() *v1beta11.ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *CreateOCMShareRequest) GetGrantee() *v1beta11.Grantee {
	if x != nil {
		return x.Grantee
	}
	return nil
}

func (x *CreateOCMShareRequest) GetRecipientMeshProvider() *v1beta12.ProviderInfo {
	if x != nil {
		return x.RecipientMeshProvider
	}
	return nil
}

func (x *CreateOCMShareRequest) GetAccessMethods() []*AccessMethod {
	if x != nil {
		return x.AccessMethods
	}
	return nil
}

func (x *CreateOCMShareRequest) GetExpiration() *v1beta1.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

type CreateOCMShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED.
	// The response status.
	Status *v1beta13.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The created share.
	Share *Share `protobuf:"bytes,3,opt,name=share,proto3" json:"share,omitempty"`
	// OPTIONAL.
	// Display name of the recipient of the share.
	RecipientDisplayName string `protobuf:"bytes,4,opt,name=recipient_display_name,json=recipientDisplayName,proto3" json:"recipient_display_name,omitempty"`
}

func (x *CreateOCMShareResponse) Reset() {
	*x = CreateOCMShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOCMShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOCMShareResponse) ProtoMessage() {}

func (x *CreateOCMShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOCMShareResponse.ProtoReflect.Descriptor instead.
func (*CreateOCMShareResponse) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{1}
}

func (x *CreateOCMShareResponse) GetStatus() *v1beta13.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CreateOCMShareResponse) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *CreateOCMShareResponse) GetShare() *Share {
	if x != nil {
		return x.Share
	}
	return nil
}

func (x *CreateOCMShareResponse) GetRecipientDisplayName() string {
	if x != nil {
		return x.RecipientDisplayName
	}
	return ""
}

type UpdateOCMShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	Ref   *ShareReference                      `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Field []*UpdateOCMShareRequest_UpdateField `protobuf:"bytes,3,rep,name=field,proto3" json:"field,omitempty"`
}

func (x *UpdateOCMShareRequest) Reset() {
	*x = UpdateOCMShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOCMShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOCMShareRequest) ProtoMessage() {}

func (x *UpdateOCMShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOCMShareRequest.ProtoReflect.Descriptor instead.
func (*UpdateOCMShareRequest) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateOCMShareRequest) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *UpdateOCMShareRequest) GetRef() *ShareReference {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *UpdateOCMShareRequest) GetField() []*UpdateOCMShareRequest_UpdateField {
	if x != nil {
		return x.Field
	}
	return nil
}

type UpdateOCMShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED.
	// The response status.
	Status *v1beta13.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
}

func (x *UpdateOCMShareResponse) Reset() {
	*x = UpdateOCMShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOCMShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOCMShareResponse) ProtoMessage() {}

func (x *UpdateOCMShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOCMShareResponse.ProtoReflect.Descriptor instead.
func (*UpdateOCMShareResponse) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateOCMShareResponse) GetStatus() *v1beta13.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *UpdateOCMShareResponse) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

type ListOCMSharesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// OPTIONAL.
	// The list of filters to apply if any.
	Filters []*ListOCMSharesRequest_Filter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	// OPTIONAL.
	// Clients use this field to specify the maximum number of results to be returned by the server.
	// The server may further constrain the maximum number of results returned in a single page.
	// If the page_size is 0, the server will decide the number of results to be returned.
	// see https://cloud.google.com/apis/design/design_patterns#list_pagination
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// OPTIONAL.
	// The client uses this field to request a specific page of the list results.
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListOCMSharesRequest) Reset() {
	*x = ListOCMSharesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOCMSharesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOCMSharesRequest) ProtoMessage() {}

func (x *ListOCMSharesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOCMSharesRequest.ProtoReflect.Descriptor instead.
func (*ListOCMSharesRequest) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{4}
}

func (x *ListOCMSharesRequest) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *ListOCMSharesRequest) GetFilters() []*ListOCMSharesRequest_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListOCMSharesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListOCMSharesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListOCMSharesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED.
	// The response status.
	Status *v1beta13.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The list of shares.
	Shares []*Share `protobuf:"bytes,3,rep,name=shares,proto3" json:"shares,omitempty"`
	// OPTIONAL.
	// This field represents the pagination token to retrieve the next page of results.
	// If the value is "", it means no further results for the request.
	// see https://cloud.google.com/apis/design/design_patterns#list_pagination
	NextPageToken string `protobuf:"bytes,4,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListOCMSharesResponse) Reset() {
	*x = ListOCMSharesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOCMSharesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOCMSharesResponse) ProtoMessage() {}

func (x *ListOCMSharesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOCMSharesResponse.ProtoReflect.Descriptor instead.
func (*ListOCMSharesResponse) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{5}
}

func (x *ListOCMSharesResponse) GetStatus() *v1beta13.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListOCMSharesResponse) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *ListOCMSharesResponse) GetShares() []*Share {
	if x != nil {
		return x.Shares
	}
	return nil
}

func (x *ListOCMSharesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type RemoveOCMShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The reference to which the action should be performed.
	Ref *ShareReference `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *RemoveOCMShareRequest) Reset() {
	*x = RemoveOCMShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOCMShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOCMShareRequest) ProtoMessage() {}

func (x *RemoveOCMShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOCMShareRequest.ProtoReflect.Descriptor instead.
func (*RemoveOCMShareRequest) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveOCMShareRequest) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *RemoveOCMShareRequest) GetRef() *ShareReference {
	if x != nil {
		return x.Ref
	}
	return nil
}

type RemoveOCMShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED.
	// The response status.
	Status *v1beta13.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
}

func (x *RemoveOCMShareResponse) Reset() {
	*x = RemoveOCMShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOCMShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOCMShareResponse) ProtoMessage() {}

func (x *RemoveOCMShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOCMShareResponse.ProtoReflect.Descriptor instead.
func (*RemoveOCMShareResponse) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveOCMShareResponse) GetStatus() *v1beta13.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *RemoveOCMShareResponse) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

type GetOCMShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The reference to which the action should be performed.
	Ref *ShareReference `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *GetOCMShareRequest) Reset() {
	*x = GetOCMShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOCMShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOCMShareRequest) ProtoMessage() {}

func (x *GetOCMShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOCMShareRequest.ProtoReflect.Descriptor instead.
func (*GetOCMShareRequest) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{8}
}

func (x *GetOCMShareRequest) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *GetOCMShareRequest) GetRef() *ShareReference {
	if x != nil {
		return x.Ref
	}
	return nil
}

type GetOCMShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED.
	// The response status.
	Status *v1beta13.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The share.
	Share *Share `protobuf:"bytes,3,opt,name=share,proto3" json:"share,omitempty"`
}

func (x *GetOCMShareResponse) Reset() {
	*x = GetOCMShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOCMShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOCMShareResponse) ProtoMessage() {}

func (x *GetOCMShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOCMShareResponse.ProtoReflect.Descriptor instead.
func (*GetOCMShareResponse) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{9}
}

func (x *GetOCMShareResponse) GetStatus() *v1beta13.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetOCMShareResponse) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *GetOCMShareResponse) GetShare() *Share {
	if x != nil {
		return x.Share
	}
	return nil
}

type GetOCMShareByTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED.
	// The unlisted token to identify the public share.
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetOCMShareByTokenRequest) Reset() {
	*x = GetOCMShareByTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOCMShareByTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOCMShareByTokenRequest) ProtoMessage() {}

func (x *GetOCMShareByTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOCMShareByTokenRequest.ProtoReflect.Descriptor instead.
func (*GetOCMShareByTokenRequest) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{10}
}

func (x *GetOCMShareByTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetOCMShareByTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED.
	// The response status.
	Status *v1beta13.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// REQUIRED.
	// The share.
	Share *Share `protobuf:"bytes,2,opt,name=share,proto3" json:"share,omitempty"`
}

func (x *GetOCMShareByTokenResponse) Reset() {
	*x = GetOCMShareByTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOCMShareByTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOCMShareByTokenResponse) ProtoMessage() {}

func (x *GetOCMShareByTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOCMShareByTokenResponse.ProtoReflect.Descriptor instead.
func (*GetOCMShareByTokenResponse) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{11}
}

func (x *GetOCMShareByTokenResponse) GetStatus() *v1beta13.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetOCMShareByTokenResponse) GetShare() *Share {
	if x != nil {
		return x.Share
	}
	return nil
}

type ListReceivedOCMSharesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// OPTIONAL.
	// Clients use this field to specify the maximum number of results to be returned by the server.
	// The server may further constrain the maximum number of results returned in a single page.
	// If the page_size is 0, the server will decide the number of results to be returned.
	// see https://cloud.google.com/apis/design/design_patterns#list_pagination
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// OPTIONAL.
	// The client uses this field to request a specific page of the list results.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListReceivedOCMSharesRequest) Reset() {
	*x = ListReceivedOCMSharesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReceivedOCMSharesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReceivedOCMSharesRequest) ProtoMessage() {}

func (x *ListReceivedOCMSharesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReceivedOCMSharesRequest.ProtoReflect.Descriptor instead.
func (*ListReceivedOCMSharesRequest) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{12}
}

func (x *ListReceivedOCMSharesRequest) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *ListReceivedOCMSharesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListReceivedOCMSharesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListReceivedOCMSharesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED.
	// The response status.
	Status *v1beta13.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The list of received shares.
	Shares []*ReceivedShare `protobuf:"bytes,3,rep,name=shares,proto3" json:"shares,omitempty"`
	// OPTIONAL.
	// This field represents the pagination token to retrieve the next page of results.
	// If the value is "", it means no further results for the request.
	// see https://cloud.google.com/apis/design/design_patterns#list_pagination
	NextPageToken string `protobuf:"bytes,4,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListReceivedOCMSharesResponse) Reset() {
	*x = ListReceivedOCMSharesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReceivedOCMSharesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReceivedOCMSharesResponse) ProtoMessage() {}

func (x *ListReceivedOCMSharesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReceivedOCMSharesResponse.ProtoReflect.Descriptor instead.
func (*ListReceivedOCMSharesResponse) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{13}
}

func (x *ListReceivedOCMSharesResponse) GetStatus() *v1beta13.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListReceivedOCMSharesResponse) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *ListReceivedOCMSharesResponse) GetShares() []*ReceivedShare {
	if x != nil {
		return x.Shares
	}
	return nil
}

func (x *ListReceivedOCMSharesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// TODO(labkode): clean up display_name ? we'll use storage links for that.
type UpdateReceivedOCMShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The received share to update.
	Share *ReceivedShare `protobuf:"bytes,2,opt,name=share,proto3" json:"share,omitempty"`
	// The update mask applies to the resource. For the `FieldMask` definition,
	// see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateReceivedOCMShareRequest) Reset() {
	*x = UpdateReceivedOCMShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReceivedOCMShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReceivedOCMShareRequest) ProtoMessage() {}

func (x *UpdateReceivedOCMShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReceivedOCMShareRequest.ProtoReflect.Descriptor instead.
func (*UpdateReceivedOCMShareRequest) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateReceivedOCMShareRequest) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *UpdateReceivedOCMShareRequest) GetShare() *ReceivedShare {
	if x != nil {
		return x.Share
	}
	return nil
}

func (x *UpdateReceivedOCMShareRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateReceivedOCMShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED.
	// The response status.
	Status *v1beta13.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
}

func (x *UpdateReceivedOCMShareResponse) Reset() {
	*x = UpdateReceivedOCMShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReceivedOCMShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReceivedOCMShareResponse) ProtoMessage() {}

func (x *UpdateReceivedOCMShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReceivedOCMShareResponse.ProtoReflect.Descriptor instead.
func (*UpdateReceivedOCMShareResponse) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateReceivedOCMShareResponse) GetStatus() *v1beta13.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *UpdateReceivedOCMShareResponse) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

type GetReceivedOCMShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The reference of the received share.
	Ref *ShareReference `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *GetReceivedOCMShareRequest) Reset() {
	*x = GetReceivedOCMShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReceivedOCMShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReceivedOCMShareRequest) ProtoMessage() {}

func (x *GetReceivedOCMShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReceivedOCMShareRequest.ProtoReflect.Descriptor instead.
func (*GetReceivedOCMShareRequest) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{16}
}

func (x *GetReceivedOCMShareRequest) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *GetReceivedOCMShareRequest) GetRef() *ShareReference {
	if x != nil {
		return x.Ref
	}
	return nil
}

type GetReceivedOCMShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED.
	// The response status.
	Status *v1beta13.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The share.
	Share *ReceivedShare `protobuf:"bytes,3,opt,name=share,proto3" json:"share,omitempty"`
}

func (x *GetReceivedOCMShareResponse) Reset() {
	*x = GetReceivedOCMShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReceivedOCMShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReceivedOCMShareResponse) ProtoMessage() {}

func (x *GetReceivedOCMShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReceivedOCMShareResponse.ProtoReflect.Descriptor instead.
func (*GetReceivedOCMShareResponse) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{17}
}

func (x *GetReceivedOCMShareResponse) GetStatus() *v1beta13.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetReceivedOCMShareResponse) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *GetReceivedOCMShareResponse) GetShare() *ReceivedShare {
	if x != nil {
		return x.Share
	}
	return nil
}

// REQUIRED.
type UpdateOCMShareRequest_UpdateField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// One of the update fields MUST be specified.
	//
	// Types that are assignable to Field:
	//
	//	*UpdateOCMShareRequest_UpdateField_Expiration
	//	*UpdateOCMShareRequest_UpdateField_AccessMethods
	Field isUpdateOCMShareRequest_UpdateField_Field `protobuf_oneof:"field"`
}

func (x *UpdateOCMShareRequest_UpdateField) Reset() {
	*x = UpdateOCMShareRequest_UpdateField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOCMShareRequest_UpdateField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOCMShareRequest_UpdateField) ProtoMessage() {}

func (x *UpdateOCMShareRequest_UpdateField) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOCMShareRequest_UpdateField.ProtoReflect.Descriptor instead.
func (*UpdateOCMShareRequest_UpdateField) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{2, 0}
}

func (m *UpdateOCMShareRequest_UpdateField) GetField() isUpdateOCMShareRequest_UpdateField_Field {
	if m != nil {
		return m.Field
	}
	return nil
}

func (x *UpdateOCMShareRequest_UpdateField) GetExpiration() *v1beta1.Timestamp {
	if x, ok := x.GetField().(*UpdateOCMShareRequest_UpdateField_Expiration); ok {
		return x.Expiration
	}
	return nil
}

func (x *UpdateOCMShareRequest_UpdateField) GetAccessMethods() *AccessMethod {
	if x, ok := x.GetField().(*UpdateOCMShareRequest_UpdateField_AccessMethods); ok {
		return x.AccessMethods
	}
	return nil
}

type isUpdateOCMShareRequest_UpdateField_Field interface {
	isUpdateOCMShareRequest_UpdateField_Field()
}

type UpdateOCMShareRequest_UpdateField_Expiration struct {
	// Update the expiration.
	Expiration *v1beta1.Timestamp `protobuf:"bytes,1,opt,name=expiration,proto3,oneof"`
}

type UpdateOCMShareRequest_UpdateField_AccessMethods struct {
	// Update access methods.
	AccessMethods *AccessMethod `protobuf:"bytes,2,opt,name=access_methods,json=accessMethods,proto3,oneof"`
}

func (*UpdateOCMShareRequest_UpdateField_Expiration) isUpdateOCMShareRequest_UpdateField_Field() {}

func (*UpdateOCMShareRequest_UpdateField_AccessMethods) isUpdateOCMShareRequest_UpdateField_Field() {}

// REQUIRED.
// represents a filter to apply to the request.
type ListOCMSharesRequest_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED.
	Type ListOCMSharesRequest_Filter_Type `protobuf:"varint,2,opt,name=type,proto3,enum=cs3.sharing.ocm.v1beta1.ListOCMSharesRequest_Filter_Type" json:"type,omitempty"`
	// Types that are assignable to Term:
	//
	//	*ListOCMSharesRequest_Filter_ResourceId
	//	*ListOCMSharesRequest_Filter_Owner
	//	*ListOCMSharesRequest_Filter_Creator
	Term isListOCMSharesRequest_Filter_Term `protobuf_oneof:"term"`
}

func (x *ListOCMSharesRequest_Filter) Reset() {
	*x = ListOCMSharesRequest_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOCMSharesRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOCMSharesRequest_Filter) ProtoMessage() {}

func (x *ListOCMSharesRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOCMSharesRequest_Filter.ProtoReflect.Descriptor instead.
func (*ListOCMSharesRequest_Filter) Descriptor() ([]byte, []int) {
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ListOCMSharesRequest_Filter) GetType() ListOCMSharesRequest_Filter_Type {
	if x != nil {
		return x.Type
	}
	return ListOCMSharesRequest_Filter_TYPE_INVALID
}

func (m *ListOCMSharesRequest_Filter) GetTerm() isListOCMSharesRequest_Filter_Term {
	if m != nil {
		return m.Term
	}
	return nil
}

func (x *ListOCMSharesRequest_Filter) GetResourceId() *v1beta11.ResourceId {
	if x, ok := x.GetTerm().(*ListOCMSharesRequest_Filter_ResourceId); ok {
		return x.ResourceId
	}
	return nil
}

func (x *ListOCMSharesRequest_Filter) GetOwner() *v1beta14.UserId {
	if x, ok := x.GetTerm().(*ListOCMSharesRequest_Filter_Owner); ok {
		return x.Owner
	}
	return nil
}

func (x *ListOCMSharesRequest_Filter) GetCreator() *v1beta14.UserId {
	if x, ok := x.GetTerm().(*ListOCMSharesRequest_Filter_Creator); ok {
		return x.Creator
	}
	return nil
}

type isListOCMSharesRequest_Filter_Term interface {
	isListOCMSharesRequest_Filter_Term()
}

type ListOCMSharesRequest_Filter_ResourceId struct {
	ResourceId *v1beta11.ResourceId `protobuf:"bytes,3,opt,name=resource_id,json=resourceId,proto3,oneof"`
}

type ListOCMSharesRequest_Filter_Owner struct {
	Owner *v1beta14.UserId `protobuf:"bytes,4,opt,name=owner,proto3,oneof"`
}

type ListOCMSharesRequest_Filter_Creator struct {
	Creator *v1beta14.UserId `protobuf:"bytes,5,opt,name=creator,proto3,oneof"`
}

func (*ListOCMSharesRequest_Filter_ResourceId) isListOCMSharesRequest_Filter_Term() {}

func (*ListOCMSharesRequest_Filter_Owner) isListOCMSharesRequest_Filter_Term() {}

func (*ListOCMSharesRequest_Filter_Creator) isListOCMSharesRequest_Filter_Term() {}

var File_cs3_sharing_ocm_v1beta1_ocm_api_proto protoreflect.FileDescriptor

var file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDesc = []byte{
	0x0a, 0x25, 0x63, 0x73, 0x33, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x6f, 0x63,
	0x6d, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x6f, 0x63, 0x6d, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x1a, 0x29, 0x63, 0x73, 0x33, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x63, 0x73, 0x33,
	0x2f, 0x6f, 0x63, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x63, 0x73, 0x33, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x63, 0x73, 0x33, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x2f, 0x6f, 0x63, 0x6d, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x63, 0x73,
	0x33, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x63, 0x73, 0x33, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x03, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65,
	0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12, 0x49, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x63, 0x73, 0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x52, 0x07, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x65, 0x65, 0x12, 0x5e, 0x0a, 0x17, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x6d, 0x65, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x6f, 0x63, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x15, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63,
	0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xe8, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x43, 0x4d, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x73,
	0x33, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x06,
	0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12,
	0x34, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x05,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x80, 0x03, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65,
	0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x03,
	0x72, 0x65, 0x66, 0x12, 0x50, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x1a, 0xa6, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x73, 0x33, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x7c,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61,
	0x71, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70,
	0x61, 0x71, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x22, 0x92, 0x05, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65,
	0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12, 0x4e, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x73, 0x33, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0xba, 0x03, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x4d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e,
	0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x43, 0x4d, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4b,
	0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x48, 0x00, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x73, 0x33,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x48, 0x00, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x48, 0x00, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x91, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x49,
	0x44, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x57, 0x4e, 0x45,
	0x52, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x57,
	0x4e, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x10, 0x05, 0x12, 0x19,
	0x0a, 0x15, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x50,
	0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x10, 0x06, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x65, 0x72,
	0x6d, 0x22, 0xdb, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x73,
	0x33, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x06,
	0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12,
	0x36, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63,
	0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x85, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61,
	0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70,
	0x61, 0x71, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x03,
	0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x73, 0x33, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x7c, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52, 0x06, 0x6f,
	0x70, 0x61, 0x71, 0x75, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x43, 0x4d,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06,
	0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12,
	0x39, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63,
	0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0xaf, 0x01, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52, 0x06,
	0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x22, 0x31, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x83, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x73, 0x33, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x34, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x05,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75,
	0x65, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xeb, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61,
	0x71, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x73,
	0x33, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0xcd, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65,
	0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x73, 0x6b, 0x22, 0x84, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61, 0x71,
	0x75, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61,
	0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70,
	0x61, 0x71, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x03,
	0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x73, 0x33, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0xbf, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61,
	0x71, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x73, 0x33,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x32, 0xd2, 0x08, 0x0a, 0x06, 0x4f, 0x63,
	0x6d, 0x41, 0x50, 0x49, 0x12, 0x71, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x43,
	0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x2e, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x2e, 0x2e, 0x63, 0x73, 0x33, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x73, 0x33, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x2b, 0x2e, 0x63, 0x73, 0x33, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x43, 0x4d, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32, 0x2e, 0x63, 0x73, 0x33,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x43, 0x4d, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x43, 0x4d, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x43, 0x4d,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x2e, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x12, 0x35, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f,
	0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4f, 0x43,
	0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x89, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x36, 0x2e, 0x63, 0x73, 0x33,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4f, 0x43, 0x4d, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4f, 0x43, 0x4d, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x12, 0x33, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4f, 0x43, 0x4d, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4f, 0x43,
	0x4d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xea,
	0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x42, 0x0b,
	0x4f, 0x63, 0x6d, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3f, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x73, 0x33, 0x6f, 0x72, 0x67,
	0x2f, 0x67, 0x6f, 0x2d, 0x63, 0x73, 0x33, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x73, 0x33, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x6f, 0x63, 0x6d, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x3b, 0x6f, 0x63, 0x6d, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xa2, 0x02,
	0x03, 0x43, 0x53, 0x4f, 0xaa, 0x02, 0x17, 0x43, 0x73, 0x33, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x4f, 0x63, 0x6d, 0x2e, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xca, 0x02,
	0x17, 0x43, 0x73, 0x33, 0x5c, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5c, 0x4f, 0x63, 0x6d,
	0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xe2, 0x02, 0x23, 0x43, 0x73, 0x33, 0x5c, 0x53,
	0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5c, 0x4f, 0x63, 0x6d, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x1a, 0x43, 0x73, 0x33, 0x3a, 0x3a, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x3a, 0x3a, 0x4f,
	0x63, 0x6d, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescOnce sync.Once
	file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescData = file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDesc
)

func file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescGZIP() []byte {
	file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescOnce.Do(func() {
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescData)
	})
	return file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDescData
}

var file_cs3_sharing_ocm_v1beta1_ocm_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_cs3_sharing_ocm_v1beta1_ocm_api_proto_goTypes = []interface{}{
	(ListOCMSharesRequest_Filter_Type)(0),     // 0: cs3.sharing.ocm.v1beta1.ListOCMSharesRequest.Filter.Type
	(*CreateOCMShareRequest)(nil),             // 1: cs3.sharing.ocm.v1beta1.CreateOCMShareRequest
	(*CreateOCMShareResponse)(nil),            // 2: cs3.sharing.ocm.v1beta1.CreateOCMShareResponse
	(*UpdateOCMShareRequest)(nil),             // 3: cs3.sharing.ocm.v1beta1.UpdateOCMShareRequest
	(*UpdateOCMShareResponse)(nil),            // 4: cs3.sharing.ocm.v1beta1.UpdateOCMShareResponse
	(*ListOCMSharesRequest)(nil),              // 5: cs3.sharing.ocm.v1beta1.ListOCMSharesRequest
	(*ListOCMSharesResponse)(nil),             // 6: cs3.sharing.ocm.v1beta1.ListOCMSharesResponse
	(*RemoveOCMShareRequest)(nil),             // 7: cs3.sharing.ocm.v1beta1.RemoveOCMShareRequest
	(*RemoveOCMShareResponse)(nil),            // 8: cs3.sharing.ocm.v1beta1.RemoveOCMShareResponse
	(*GetOCMShareRequest)(nil),                // 9: cs3.sharing.ocm.v1beta1.GetOCMShareRequest
	(*GetOCMShareResponse)(nil),               // 10: cs3.sharing.ocm.v1beta1.GetOCMShareResponse
	(*GetOCMShareByTokenRequest)(nil),         // 11: cs3.sharing.ocm.v1beta1.GetOCMShareByTokenRequest
	(*GetOCMShareByTokenResponse)(nil),        // 12: cs3.sharing.ocm.v1beta1.GetOCMShareByTokenResponse
	(*ListReceivedOCMSharesRequest)(nil),      // 13: cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesRequest
	(*ListReceivedOCMSharesResponse)(nil),     // 14: cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesResponse
	(*UpdateReceivedOCMShareRequest)(nil),     // 15: cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareRequest
	(*UpdateReceivedOCMShareResponse)(nil),    // 16: cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareResponse
	(*GetReceivedOCMShareRequest)(nil),        // 17: cs3.sharing.ocm.v1beta1.GetReceivedOCMShareRequest
	(*GetReceivedOCMShareResponse)(nil),       // 18: cs3.sharing.ocm.v1beta1.GetReceivedOCMShareResponse
	(*UpdateOCMShareRequest_UpdateField)(nil), // 19: cs3.sharing.ocm.v1beta1.UpdateOCMShareRequest.UpdateField
	(*ListOCMSharesRequest_Filter)(nil),       // 20: cs3.sharing.ocm.v1beta1.ListOCMSharesRequest.Filter
	(*v1beta1.Opaque)(nil),                    // 21: cs3.types.v1beta1.Opaque
	(*v1beta11.ResourceId)(nil),               // 22: cs3.storage.provider.v1beta1.ResourceId
	(*v1beta11.Grantee)(nil),                  // 23: cs3.storage.provider.v1beta1.Grantee
	(*v1beta12.ProviderInfo)(nil),             // 24: cs3.ocm.provider.v1beta1.ProviderInfo
	(*AccessMethod)(nil),                      // 25: cs3.sharing.ocm.v1beta1.AccessMethod
	(*v1beta1.Timestamp)(nil),                 // 26: cs3.types.v1beta1.Timestamp
	(*v1beta13.Status)(nil),                   // 27: cs3.rpc.v1beta1.Status
	(*Share)(nil),                             // 28: cs3.sharing.ocm.v1beta1.Share
	(*ShareReference)(nil),                    // 29: cs3.sharing.ocm.v1beta1.ShareReference
	(*ReceivedShare)(nil),                     // 30: cs3.sharing.ocm.v1beta1.ReceivedShare
	(*fieldmaskpb.FieldMask)(nil),             // 31: google.protobuf.FieldMask
	(*v1beta14.UserId)(nil),                   // 32: cs3.identity.user.v1beta1.UserId
}
var file_cs3_sharing_ocm_v1beta1_ocm_api_proto_depIdxs = []int32{
	21, // 0: cs3.sharing.ocm.v1beta1.CreateOCMShareRequest.opaque:type_name -> cs3.types.v1beta1.Opaque
	22, // 1: cs3.sharing.ocm.v1beta1.CreateOCMShareRequest.resource_id:type_name -> cs3.storage.provider.v1beta1.ResourceId
	23, // 2: cs3.sharing.ocm.v1beta1.CreateOCMShareRequest.grantee:type_name -> cs3.storage.provider.v1beta1.Grantee
	24, // 3: cs3.sharing.ocm.v1beta1.CreateOCMShareRequest.recipient_mesh_provider:type_name -> cs3.ocm.provider.v1beta1.ProviderInfo
	25, // 4: cs3.sharing.ocm.v1beta1.CreateOCMShareRequest.access_methods:type_name -> cs3.sharing.ocm.v1beta1.AccessMethod
	26, // 5: cs3.sharing.ocm.v1beta1.CreateOCMShareRequest.expiration:type_name -> cs3.types.v1beta1.Timestamp
	27, // 6: cs3.sharing.ocm.v1beta1.CreateOCMShareResponse.status:type_name -> cs3.rpc.v1beta1.Status
	21, // 7: cs3.sharing.ocm.v1beta1.CreateOCMShareResponse.opaque:type_name -> cs3.types.v1beta1.Opaque
	28, // 8: cs3.sharing.ocm.v1beta1.CreateOCMShareResponse.share:type_name -> cs3.sharing.ocm.v1beta1.Share
	21, // 9: cs3.sharing.ocm.v1beta1.UpdateOCMShareRequest.opaque:type_name -> cs3.types.v1beta1.Opaque
	29, // 10: cs3.sharing.ocm.v1beta1.UpdateOCMShareRequest.ref:type_name -> cs3.sharing.ocm.v1beta1.ShareReference
	19, // 11: cs3.sharing.ocm.v1beta1.UpdateOCMShareRequest.field:type_name -> cs3.sharing.ocm.v1beta1.UpdateOCMShareRequest.UpdateField
	27, // 12: cs3.sharing.ocm.v1beta1.UpdateOCMShareResponse.status:type_name -> cs3.rpc.v1beta1.Status
	21, // 13: cs3.sharing.ocm.v1beta1.UpdateOCMShareResponse.opaque:type_name -> cs3.types.v1beta1.Opaque
	21, // 14: cs3.sharing.ocm.v1beta1.ListOCMSharesRequest.opaque:type_name -> cs3.types.v1beta1.Opaque
	20, // 15: cs3.sharing.ocm.v1beta1.ListOCMSharesRequest.filters:type_name -> cs3.sharing.ocm.v1beta1.ListOCMSharesRequest.Filter
	27, // 16: cs3.sharing.ocm.v1beta1.ListOCMSharesResponse.status:type_name -> cs3.rpc.v1beta1.Status
	21, // 17: cs3.sharing.ocm.v1beta1.ListOCMSharesResponse.opaque:type_name -> cs3.types.v1beta1.Opaque
	28, // 18: cs3.sharing.ocm.v1beta1.ListOCMSharesResponse.shares:type_name -> cs3.sharing.ocm.v1beta1.Share
	21, // 19: cs3.sharing.ocm.v1beta1.RemoveOCMShareRequest.opaque:type_name -> cs3.types.v1beta1.Opaque
	29, // 20: cs3.sharing.ocm.v1beta1.RemoveOCMShareRequest.ref:type_name -> cs3.sharing.ocm.v1beta1.ShareReference
	27, // 21: cs3.sharing.ocm.v1beta1.RemoveOCMShareResponse.status:type_name -> cs3.rpc.v1beta1.Status
	21, // 22: cs3.sharing.ocm.v1beta1.RemoveOCMShareResponse.opaque:type_name -> cs3.types.v1beta1.Opaque
	21, // 23: cs3.sharing.ocm.v1beta1.GetOCMShareRequest.opaque:type_name -> cs3.types.v1beta1.Opaque
	29, // 24: cs3.sharing.ocm.v1beta1.GetOCMShareRequest.ref:type_name -> cs3.sharing.ocm.v1beta1.ShareReference
	27, // 25: cs3.sharing.ocm.v1beta1.GetOCMShareResponse.status:type_name -> cs3.rpc.v1beta1.Status
	21, // 26: cs3.sharing.ocm.v1beta1.GetOCMShareResponse.opaque:type_name -> cs3.types.v1beta1.Opaque
	28, // 27: cs3.sharing.ocm.v1beta1.GetOCMShareResponse.share:type_name -> cs3.sharing.ocm.v1beta1.Share
	27, // 28: cs3.sharing.ocm.v1beta1.GetOCMShareByTokenResponse.status:type_name -> cs3.rpc.v1beta1.Status
	28, // 29: cs3.sharing.ocm.v1beta1.GetOCMShareByTokenResponse.share:type_name -> cs3.sharing.ocm.v1beta1.Share
	21, // 30: cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesRequest.opaque:type_name -> cs3.types.v1beta1.Opaque
	27, // 31: cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesResponse.status:type_name -> cs3.rpc.v1beta1.Status
	21, // 32: cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesResponse.opaque:type_name -> cs3.types.v1beta1.Opaque
	30, // 33: cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesResponse.shares:type_name -> cs3.sharing.ocm.v1beta1.ReceivedShare
	21, // 34: cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareRequest.opaque:type_name -> cs3.types.v1beta1.Opaque
	30, // 35: cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareRequest.share:type_name -> cs3.sharing.ocm.v1beta1.ReceivedShare
	31, // 36: cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareRequest.update_mask:type_name -> google.protobuf.FieldMask
	27, // 37: cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareResponse.status:type_name -> cs3.rpc.v1beta1.Status
	21, // 38: cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareResponse.opaque:type_name -> cs3.types.v1beta1.Opaque
	21, // 39: cs3.sharing.ocm.v1beta1.GetReceivedOCMShareRequest.opaque:type_name -> cs3.types.v1beta1.Opaque
	29, // 40: cs3.sharing.ocm.v1beta1.GetReceivedOCMShareRequest.ref:type_name -> cs3.sharing.ocm.v1beta1.ShareReference
	27, // 41: cs3.sharing.ocm.v1beta1.GetReceivedOCMShareResponse.status:type_name -> cs3.rpc.v1beta1.Status
	21, // 42: cs3.sharing.ocm.v1beta1.GetReceivedOCMShareResponse.opaque:type_name -> cs3.types.v1beta1.Opaque
	30, // 43: cs3.sharing.ocm.v1beta1.GetReceivedOCMShareResponse.share:type_name -> cs3.sharing.ocm.v1beta1.ReceivedShare
	26, // 44: cs3.sharing.ocm.v1beta1.UpdateOCMShareRequest.UpdateField.expiration:type_name -> cs3.types.v1beta1.Timestamp
	25, // 45: cs3.sharing.ocm.v1beta1.UpdateOCMShareRequest.UpdateField.access_methods:type_name -> cs3.sharing.ocm.v1beta1.AccessMethod
	0,  // 46: cs3.sharing.ocm.v1beta1.ListOCMSharesRequest.Filter.type:type_name -> cs3.sharing.ocm.v1beta1.ListOCMSharesRequest.Filter.Type
	22, // 47: cs3.sharing.ocm.v1beta1.ListOCMSharesRequest.Filter.resource_id:type_name -> cs3.storage.provider.v1beta1.ResourceId
	32, // 48: cs3.sharing.ocm.v1beta1.ListOCMSharesRequest.Filter.owner:type_name -> cs3.identity.user.v1beta1.UserId
	32, // 49: cs3.sharing.ocm.v1beta1.ListOCMSharesRequest.Filter.creator:type_name -> cs3.identity.user.v1beta1.UserId
	1,  // 50: cs3.sharing.ocm.v1beta1.OcmAPI.CreateOCMShare:input_type -> cs3.sharing.ocm.v1beta1.CreateOCMShareRequest
	7,  // 51: cs3.sharing.ocm.v1beta1.OcmAPI.RemoveOCMShare:input_type -> cs3.sharing.ocm.v1beta1.RemoveOCMShareRequest
	9,  // 52: cs3.sharing.ocm.v1beta1.OcmAPI.GetOCMShare:input_type -> cs3.sharing.ocm.v1beta1.GetOCMShareRequest
	11, // 53: cs3.sharing.ocm.v1beta1.OcmAPI.GetOCMShareByToken:input_type -> cs3.sharing.ocm.v1beta1.GetOCMShareByTokenRequest
	5,  // 54: cs3.sharing.ocm.v1beta1.OcmAPI.ListOCMShares:input_type -> cs3.sharing.ocm.v1beta1.ListOCMSharesRequest
	3,  // 55: cs3.sharing.ocm.v1beta1.OcmAPI.UpdateOCMShare:input_type -> cs3.sharing.ocm.v1beta1.UpdateOCMShareRequest
	13, // 56: cs3.sharing.ocm.v1beta1.OcmAPI.ListReceivedOCMShares:input_type -> cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesRequest
	15, // 57: cs3.sharing.ocm.v1beta1.OcmAPI.UpdateReceivedOCMShare:input_type -> cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareRequest
	17, // 58: cs3.sharing.ocm.v1beta1.OcmAPI.GetReceivedOCMShare:input_type -> cs3.sharing.ocm.v1beta1.GetReceivedOCMShareRequest
	2,  // 59: cs3.sharing.ocm.v1beta1.OcmAPI.CreateOCMShare:output_type -> cs3.sharing.ocm.v1beta1.CreateOCMShareResponse
	8,  // 60: cs3.sharing.ocm.v1beta1.OcmAPI.RemoveOCMShare:output_type -> cs3.sharing.ocm.v1beta1.RemoveOCMShareResponse
	10, // 61: cs3.sharing.ocm.v1beta1.OcmAPI.GetOCMShare:output_type -> cs3.sharing.ocm.v1beta1.GetOCMShareResponse
	12, // 62: cs3.sharing.ocm.v1beta1.OcmAPI.GetOCMShareByToken:output_type -> cs3.sharing.ocm.v1beta1.GetOCMShareByTokenResponse
	6,  // 63: cs3.sharing.ocm.v1beta1.OcmAPI.ListOCMShares:output_type -> cs3.sharing.ocm.v1beta1.ListOCMSharesResponse
	4,  // 64: cs3.sharing.ocm.v1beta1.OcmAPI.UpdateOCMShare:output_type -> cs3.sharing.ocm.v1beta1.UpdateOCMShareResponse
	14, // 65: cs3.sharing.ocm.v1beta1.OcmAPI.ListReceivedOCMShares:output_type -> cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesResponse
	16, // 66: cs3.sharing.ocm.v1beta1.OcmAPI.UpdateReceivedOCMShare:output_type -> cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareResponse
	18, // 67: cs3.sharing.ocm.v1beta1.OcmAPI.GetReceivedOCMShare:output_type -> cs3.sharing.ocm.v1beta1.GetReceivedOCMShareResponse
	59, // [59:68] is the sub-list for method output_type
	50, // [50:59] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_cs3_sharing_ocm_v1beta1_ocm_api_proto_init() }
func file_cs3_sharing_ocm_v1beta1_ocm_api_proto_init() {
	if File_cs3_sharing_ocm_v1beta1_ocm_api_proto != nil {
		return
	}
	file_cs3_sharing_ocm_v1beta1_resources_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOCMShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOCMShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOCMShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOCMShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOCMSharesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOCMSharesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveOCMShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveOCMShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOCMShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOCMShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOCMShareByTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOCMShareByTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReceivedOCMSharesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReceivedOCMSharesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReceivedOCMShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReceivedOCMShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReceivedOCMShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReceivedOCMShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOCMShareRequest_UpdateField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOCMSharesRequest_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*UpdateOCMShareRequest_UpdateField_Expiration)(nil),
		(*UpdateOCMShareRequest_UpdateField_AccessMethods)(nil),
	}
	file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*ListOCMSharesRequest_Filter_ResourceId)(nil),
		(*ListOCMSharesRequest_Filter_Owner)(nil),
		(*ListOCMSharesRequest_Filter_Creator)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cs3_sharing_ocm_v1beta1_ocm_api_proto_goTypes,
		DependencyIndexes: file_cs3_sharing_ocm_v1beta1_ocm_api_proto_depIdxs,
		EnumInfos:         file_cs3_sharing_ocm_v1beta1_ocm_api_proto_enumTypes,
		MessageInfos:      file_cs3_sharing_ocm_v1beta1_ocm_api_proto_msgTypes,
	}.Build()
	File_cs3_sharing_ocm_v1beta1_ocm_api_proto = out.File
	file_cs3_sharing_ocm_v1beta1_ocm_api_proto_rawDesc = nil
	file_cs3_sharing_ocm_v1beta1_ocm_api_proto_goTypes = nil
	file_cs3_sharing_ocm_v1beta1_ocm_api_proto_depIdxs = nil
}
