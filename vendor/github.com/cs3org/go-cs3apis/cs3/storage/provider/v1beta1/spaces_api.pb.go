// Copyright 2018-2019 CERN
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// In applying this license, CERN does not waive the privileges and immunities
// granted to it by virtue of its status as an Intergovernmental Organization
// or submit itself to any jurisdiction.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: cs3/storage/provider/v1beta1/spaces_api.proto

package providerv1beta1

import (
	v1beta11 "github.com/cs3org/go-cs3apis/cs3/identity/user/v1beta1"
	v1beta12 "github.com/cs3org/go-cs3apis/cs3/rpc/v1beta1"
	v1beta1 "github.com/cs3org/go-cs3apis/cs3/types/v1beta1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The filter to apply.
type ListStorageSpacesRequest_Filter_Type int32

const (
	ListStorageSpacesRequest_Filter_TYPE_INVALID    ListStorageSpacesRequest_Filter_Type = 0
	ListStorageSpacesRequest_Filter_TYPE_NO         ListStorageSpacesRequest_Filter_Type = 1
	ListStorageSpacesRequest_Filter_TYPE_ID         ListStorageSpacesRequest_Filter_Type = 2
	ListStorageSpacesRequest_Filter_TYPE_OWNER      ListStorageSpacesRequest_Filter_Type = 3
	ListStorageSpacesRequest_Filter_TYPE_SPACE_TYPE ListStorageSpacesRequest_Filter_Type = 4
	ListStorageSpacesRequest_Filter_TYPE_PATH       ListStorageSpacesRequest_Filter_Type = 5
	ListStorageSpacesRequest_Filter_TYPE_USER       ListStorageSpacesRequest_Filter_Type = 6
)

// Enum value maps for ListStorageSpacesRequest_Filter_Type.
var (
	ListStorageSpacesRequest_Filter_Type_name = map[int32]string{
		0: "TYPE_INVALID",
		1: "TYPE_NO",
		2: "TYPE_ID",
		3: "TYPE_OWNER",
		4: "TYPE_SPACE_TYPE",
		5: "TYPE_PATH",
		6: "TYPE_USER",
	}
	ListStorageSpacesRequest_Filter_Type_value = map[string]int32{
		"TYPE_INVALID":    0,
		"TYPE_NO":         1,
		"TYPE_ID":         2,
		"TYPE_OWNER":      3,
		"TYPE_SPACE_TYPE": 4,
		"TYPE_PATH":       5,
		"TYPE_USER":       6,
	}
)

func (x ListStorageSpacesRequest_Filter_Type) Enum() *ListStorageSpacesRequest_Filter_Type {
	p := new(ListStorageSpacesRequest_Filter_Type)
	*p = x
	return p
}

func (x ListStorageSpacesRequest_Filter_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListStorageSpacesRequest_Filter_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_cs3_storage_provider_v1beta1_spaces_api_proto_enumTypes[0].Descriptor()
}

func (ListStorageSpacesRequest_Filter_Type) Type() protoreflect.EnumType {
	return &file_cs3_storage_provider_v1beta1_spaces_api_proto_enumTypes[0]
}

func (x ListStorageSpacesRequest_Filter_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListStorageSpacesRequest_Filter_Type.Descriptor instead.
func (ListStorageSpacesRequest_Filter_Type) EnumDescriptor() ([]byte, []int) {
	return file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDescGZIP(), []int{2, 0, 0}
}

type CreateStorageSpaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	Owner *v1beta11.User `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	// OPTIONAL.
	// Could be 'home', 'share', 'project', 'space'...
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// OPTIONAL.
	// User readable name of the storage space.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// OPTIONAL.
	Quota *Quota `protobuf:"bytes,5,opt,name=quota,proto3" json:"quota,omitempty"`
}

func (x *CreateStorageSpaceRequest) Reset() {
	*x = CreateStorageSpaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStorageSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStorageSpaceRequest) ProtoMessage() {}

func (x *CreateStorageSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStorageSpaceRequest.ProtoReflect.Descriptor instead.
func (*CreateStorageSpaceRequest) Descriptor() ([]byte, []int) {
	return file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDescGZIP(), []int{0}
}

func (x *CreateStorageSpaceRequest) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *CreateStorageSpaceRequest) GetOwner() *v1beta11.User {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *CreateStorageSpaceRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateStorageSpaceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateStorageSpaceRequest) GetQuota() *Quota {
	if x != nil {
		return x.Quota
	}
	return nil
}

type CreateStorageSpaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The response status.
	Status *v1beta12.Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// REQUIRED.
	// The created storage space.
	StorageSpace *StorageSpace `protobuf:"bytes,3,opt,name=storage_space,json=storageSpace,proto3" json:"storage_space,omitempty"`
}

func (x *CreateStorageSpaceResponse) Reset() {
	*x = CreateStorageSpaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStorageSpaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStorageSpaceResponse) ProtoMessage() {}

func (x *CreateStorageSpaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStorageSpaceResponse.ProtoReflect.Descriptor instead.
func (*CreateStorageSpaceResponse) Descriptor() ([]byte, []int) {
	return file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDescGZIP(), []int{1}
}

func (x *CreateStorageSpaceResponse) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *CreateStorageSpaceResponse) GetStatus() *v1beta12.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CreateStorageSpaceResponse) GetStorageSpace() *StorageSpace {
	if x != nil {
		return x.StorageSpace
	}
	return nil
}

type ListStorageSpacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// OPTIONAL.
	// The list of filters to apply if any.
	Filters []*ListStorageSpacesRequest_Filter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	// OPTIONAL.
	// The field mask applies to the resource. For the `FieldMask` definition,
	// see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	// OPTIONAL.
	// Clients use this field to specify the maximum number of results to be returned by the server.
	// The server may further constrain the maximum number of results returned in a single page.
	// If the page_size is 0, the server will decide the number of results to be returned.
	// see https://cloud.google.com/apis/design/design_patterns#list_pagination
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// OPTIONAL.
	// The client uses this field to request a specific page of the list results.
	PageToken string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListStorageSpacesRequest) Reset() {
	*x = ListStorageSpacesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStorageSpacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStorageSpacesRequest) ProtoMessage() {}

func (x *ListStorageSpacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStorageSpacesRequest.ProtoReflect.Descriptor instead.
func (*ListStorageSpacesRequest) Descriptor() ([]byte, []int) {
	return file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDescGZIP(), []int{2}
}

func (x *ListStorageSpacesRequest) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *ListStorageSpacesRequest) GetFilters() []*ListStorageSpacesRequest_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListStorageSpacesRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *ListStorageSpacesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListStorageSpacesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListStorageSpacesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The response status.
	Status *v1beta12.Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// REQUIRED.
	StorageSpaces []*StorageSpace `protobuf:"bytes,3,rep,name=storage_spaces,json=storageSpaces,proto3" json:"storage_spaces,omitempty"`
	// OPTIONAL.
	// This field represents the pagination token to retrieve the next page of results.
	// If the value is "", it means no further results for the request.
	// see https://cloud.google.com/apis/design/design_patterns#list_pagination
	NextPageToken string `protobuf:"bytes,4,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListStorageSpacesResponse) Reset() {
	*x = ListStorageSpacesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStorageSpacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStorageSpacesResponse) ProtoMessage() {}

func (x *ListStorageSpacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStorageSpacesResponse.ProtoReflect.Descriptor instead.
func (*ListStorageSpacesResponse) Descriptor() ([]byte, []int) {
	return file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDescGZIP(), []int{3}
}

func (x *ListStorageSpacesResponse) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *ListStorageSpacesResponse) GetStatus() *v1beta12.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListStorageSpacesResponse) GetStorageSpaces() []*StorageSpace {
	if x != nil {
		return x.StorageSpaces
	}
	return nil
}

func (x *ListStorageSpacesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type UpdateStorageSpaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	StorageSpace *StorageSpace `protobuf:"bytes,2,opt,name=storage_space,json=storageSpace,proto3" json:"storage_space,omitempty"`
}

func (x *UpdateStorageSpaceRequest) Reset() {
	*x = UpdateStorageSpaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStorageSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStorageSpaceRequest) ProtoMessage() {}

func (x *UpdateStorageSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStorageSpaceRequest.ProtoReflect.Descriptor instead.
func (*UpdateStorageSpaceRequest) Descriptor() ([]byte, []int) {
	return file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateStorageSpaceRequest) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *UpdateStorageSpaceRequest) GetStorageSpace() *StorageSpace {
	if x != nil {
		return x.StorageSpace
	}
	return nil
}

type UpdateStorageSpaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The response status.
	Status *v1beta12.Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// REQUIRED.
	// The updated storage space.
	StorageSpace *StorageSpace `protobuf:"bytes,3,opt,name=storage_space,json=storageSpace,proto3" json:"storage_space,omitempty"`
}

func (x *UpdateStorageSpaceResponse) Reset() {
	*x = UpdateStorageSpaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStorageSpaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStorageSpaceResponse) ProtoMessage() {}

func (x *UpdateStorageSpaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStorageSpaceResponse.ProtoReflect.Descriptor instead.
func (*UpdateStorageSpaceResponse) Descriptor() ([]byte, []int) {
	return file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateStorageSpaceResponse) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *UpdateStorageSpaceResponse) GetStatus() *v1beta12.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *UpdateStorageSpaceResponse) GetStorageSpace() *StorageSpace {
	if x != nil {
		return x.StorageSpace
	}
	return nil
}

type DeleteStorageSpaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	Id *StorageSpaceId `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteStorageSpaceRequest) Reset() {
	*x = DeleteStorageSpaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStorageSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStorageSpaceRequest) ProtoMessage() {}

func (x *DeleteStorageSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStorageSpaceRequest.ProtoReflect.Descriptor instead.
func (*DeleteStorageSpaceRequest) Descriptor() ([]byte, []int) {
	return file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteStorageSpaceRequest) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *DeleteStorageSpaceRequest) GetId() *StorageSpaceId {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeleteStorageSpaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The response status.
	Status *v1beta12.Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteStorageSpaceResponse) Reset() {
	*x = DeleteStorageSpaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStorageSpaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStorageSpaceResponse) ProtoMessage() {}

func (x *DeleteStorageSpaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStorageSpaceResponse.ProtoReflect.Descriptor instead.
func (*DeleteStorageSpaceResponse) Descriptor() ([]byte, []int) {
	return file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteStorageSpaceResponse) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *DeleteStorageSpaceResponse) GetStatus() *v1beta12.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// Represents a filter to apply to the request.
type ListStorageSpacesRequest_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED.
	Type ListStorageSpacesRequest_Filter_Type `protobuf:"varint,1,opt,name=type,proto3,enum=cs3.storage.provider.v1beta1.ListStorageSpacesRequest_Filter_Type" json:"type,omitempty"`
	// Types that are assignable to Term:
	//
	//	*ListStorageSpacesRequest_Filter_Id
	//	*ListStorageSpacesRequest_Filter_Owner
	//	*ListStorageSpacesRequest_Filter_SpaceType
	//	*ListStorageSpacesRequest_Filter_Path
	//	*ListStorageSpacesRequest_Filter_User
	Term isListStorageSpacesRequest_Filter_Term `protobuf_oneof:"term"`
}

func (x *ListStorageSpacesRequest_Filter) Reset() {
	*x = ListStorageSpacesRequest_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStorageSpacesRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStorageSpacesRequest_Filter) ProtoMessage() {}

func (x *ListStorageSpacesRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStorageSpacesRequest_Filter.ProtoReflect.Descriptor instead.
func (*ListStorageSpacesRequest_Filter) Descriptor() ([]byte, []int) {
	return file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ListStorageSpacesRequest_Filter) GetType() ListStorageSpacesRequest_Filter_Type {
	if x != nil {
		return x.Type
	}
	return ListStorageSpacesRequest_Filter_TYPE_INVALID
}

func (m *ListStorageSpacesRequest_Filter) GetTerm() isListStorageSpacesRequest_Filter_Term {
	if m != nil {
		return m.Term
	}
	return nil
}

func (x *ListStorageSpacesRequest_Filter) GetId() *StorageSpaceId {
	if x, ok := x.GetTerm().(*ListStorageSpacesRequest_Filter_Id); ok {
		return x.Id
	}
	return nil
}

func (x *ListStorageSpacesRequest_Filter) GetOwner() *v1beta11.UserId {
	if x, ok := x.GetTerm().(*ListStorageSpacesRequest_Filter_Owner); ok {
		return x.Owner
	}
	return nil
}

func (x *ListStorageSpacesRequest_Filter) GetSpaceType() string {
	if x, ok := x.GetTerm().(*ListStorageSpacesRequest_Filter_SpaceType); ok {
		return x.SpaceType
	}
	return ""
}

func (x *ListStorageSpacesRequest_Filter) GetPath() string {
	if x, ok := x.GetTerm().(*ListStorageSpacesRequest_Filter_Path); ok {
		return x.Path
	}
	return ""
}

func (x *ListStorageSpacesRequest_Filter) GetUser() *v1beta11.UserId {
	if x, ok := x.GetTerm().(*ListStorageSpacesRequest_Filter_User); ok {
		return x.User
	}
	return nil
}

type isListStorageSpacesRequest_Filter_Term interface {
	isListStorageSpacesRequest_Filter_Term()
}

type ListStorageSpacesRequest_Filter_Id struct {
	Id *StorageSpaceId `protobuf:"bytes,2,opt,name=id,proto3,oneof"`
}

type ListStorageSpacesRequest_Filter_Owner struct {
	Owner *v1beta11.UserId `protobuf:"bytes,3,opt,name=owner,proto3,oneof"`
}

type ListStorageSpacesRequest_Filter_SpaceType struct {
	SpaceType string `protobuf:"bytes,4,opt,name=space_type,json=spaceType,proto3,oneof"`
}

type ListStorageSpacesRequest_Filter_Path struct {
	Path string `protobuf:"bytes,5,opt,name=path,proto3,oneof"`
}

type ListStorageSpacesRequest_Filter_User struct {
	User *v1beta11.UserId `protobuf:"bytes,6,opt,name=user,proto3,oneof"`
}

func (*ListStorageSpacesRequest_Filter_Id) isListStorageSpacesRequest_Filter_Term() {}

func (*ListStorageSpacesRequest_Filter_Owner) isListStorageSpacesRequest_Filter_Term() {}

func (*ListStorageSpacesRequest_Filter_SpaceType) isListStorageSpacesRequest_Filter_Term() {}

func (*ListStorageSpacesRequest_Filter_Path) isListStorageSpacesRequest_Filter_Term() {}

func (*ListStorageSpacesRequest_Filter_User) isListStorageSpacesRequest_Filter_Term() {}

var File_cs3_storage_provider_v1beta1_spaces_api_proto protoreflect.FileDescriptor

var file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x63, 0x73, 0x33, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1c, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x29, 0x63,
	0x73, 0x33, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x63, 0x73, 0x33, 0x2f, 0x72, 0x70,
	0x63, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x63, 0x73, 0x33, 0x2f, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x63, 0x73, 0x33, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe8, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52, 0x06,
	0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x22, 0xd1, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71,
	0x75, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x4f, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x73, 0x33,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x22, 0xea, 0x05, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x70,
	0x61, 0x71, 0x75, 0x65, 0x12, 0x57, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a,
	0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0xca, 0x03, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x56, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e,
	0x63, 0x73, 0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x37, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x48, 0x00, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x22, 0x75, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x49, 0x44, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f,
	0x57, 0x4e, 0x45, 0x52, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53,
	0x50, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x54, 0x48, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x06, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x65, 0x72,
	0x6d, 0x22, 0xfa, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71,
	0x75, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x51, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x73,
	0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9f,
	0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06,
	0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12,
	0x4f, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x22, 0xd1, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71,
	0x75, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x4f, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x73, 0x33,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52, 0x06, 0x6f,
	0x70, 0x61, 0x71, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52, 0x06, 0x6f,
	0x70, 0x61, 0x71, 0x75, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xb0, 0x04, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x73, 0x41, 0x50, 0x49, 0x12, 0x87, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x37, 0x2e, 0x63, 0x73,
	0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x84,
	0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x12, 0x36, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63,
	0x73, 0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x37, 0x2e, 0x63,
	0x73, 0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x87, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x37, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x38, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x90, 0x02, 0x0a, 0x20, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x42, 0x0e,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x73, 0x33,
	0x6f, 0x72, 0x67, 0x2f, 0x67, 0x6f, 0x2d, 0x63, 0x73, 0x33, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63,
	0x73, 0x33, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x3b, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x53,
	0x50, 0xaa, 0x02, 0x1c, 0x43, 0x73, 0x33, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0xca, 0x02, 0x1c, 0x43, 0x73, 0x33, 0x5c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5c, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xe2,
	0x02, 0x28, 0x43, 0x73, 0x33, 0x5c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5c, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1f, 0x43, 0x73, 0x33,
	0x3a, 0x3a, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDescOnce sync.Once
	file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDescData = file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDesc
)

func file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDescGZIP() []byte {
	file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDescOnce.Do(func() {
		file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDescData)
	})
	return file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDescData
}

var file_cs3_storage_provider_v1beta1_spaces_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_cs3_storage_provider_v1beta1_spaces_api_proto_goTypes = []interface{}{
	(ListStorageSpacesRequest_Filter_Type)(0), // 0: cs3.storage.provider.v1beta1.ListStorageSpacesRequest.Filter.Type
	(*CreateStorageSpaceRequest)(nil),         // 1: cs3.storage.provider.v1beta1.CreateStorageSpaceRequest
	(*CreateStorageSpaceResponse)(nil),        // 2: cs3.storage.provider.v1beta1.CreateStorageSpaceResponse
	(*ListStorageSpacesRequest)(nil),          // 3: cs3.storage.provider.v1beta1.ListStorageSpacesRequest
	(*ListStorageSpacesResponse)(nil),         // 4: cs3.storage.provider.v1beta1.ListStorageSpacesResponse
	(*UpdateStorageSpaceRequest)(nil),         // 5: cs3.storage.provider.v1beta1.UpdateStorageSpaceRequest
	(*UpdateStorageSpaceResponse)(nil),        // 6: cs3.storage.provider.v1beta1.UpdateStorageSpaceResponse
	(*DeleteStorageSpaceRequest)(nil),         // 7: cs3.storage.provider.v1beta1.DeleteStorageSpaceRequest
	(*DeleteStorageSpaceResponse)(nil),        // 8: cs3.storage.provider.v1beta1.DeleteStorageSpaceResponse
	(*ListStorageSpacesRequest_Filter)(nil),   // 9: cs3.storage.provider.v1beta1.ListStorageSpacesRequest.Filter
	(*v1beta1.Opaque)(nil),                    // 10: cs3.types.v1beta1.Opaque
	(*v1beta11.User)(nil),                     // 11: cs3.identity.user.v1beta1.User
	(*Quota)(nil),                             // 12: cs3.storage.provider.v1beta1.Quota
	(*v1beta12.Status)(nil),                   // 13: cs3.rpc.v1beta1.Status
	(*StorageSpace)(nil),                      // 14: cs3.storage.provider.v1beta1.StorageSpace
	(*fieldmaskpb.FieldMask)(nil),             // 15: google.protobuf.FieldMask
	(*StorageSpaceId)(nil),                    // 16: cs3.storage.provider.v1beta1.StorageSpaceId
	(*v1beta11.UserId)(nil),                   // 17: cs3.identity.user.v1beta1.UserId
}
var file_cs3_storage_provider_v1beta1_spaces_api_proto_depIdxs = []int32{
	10, // 0: cs3.storage.provider.v1beta1.CreateStorageSpaceRequest.opaque:type_name -> cs3.types.v1beta1.Opaque
	11, // 1: cs3.storage.provider.v1beta1.CreateStorageSpaceRequest.owner:type_name -> cs3.identity.user.v1beta1.User
	12, // 2: cs3.storage.provider.v1beta1.CreateStorageSpaceRequest.quota:type_name -> cs3.storage.provider.v1beta1.Quota
	10, // 3: cs3.storage.provider.v1beta1.CreateStorageSpaceResponse.opaque:type_name -> cs3.types.v1beta1.Opaque
	13, // 4: cs3.storage.provider.v1beta1.CreateStorageSpaceResponse.status:type_name -> cs3.rpc.v1beta1.Status
	14, // 5: cs3.storage.provider.v1beta1.CreateStorageSpaceResponse.storage_space:type_name -> cs3.storage.provider.v1beta1.StorageSpace
	10, // 6: cs3.storage.provider.v1beta1.ListStorageSpacesRequest.opaque:type_name -> cs3.types.v1beta1.Opaque
	9,  // 7: cs3.storage.provider.v1beta1.ListStorageSpacesRequest.filters:type_name -> cs3.storage.provider.v1beta1.ListStorageSpacesRequest.Filter
	15, // 8: cs3.storage.provider.v1beta1.ListStorageSpacesRequest.field_mask:type_name -> google.protobuf.FieldMask
	10, // 9: cs3.storage.provider.v1beta1.ListStorageSpacesResponse.opaque:type_name -> cs3.types.v1beta1.Opaque
	13, // 10: cs3.storage.provider.v1beta1.ListStorageSpacesResponse.status:type_name -> cs3.rpc.v1beta1.Status
	14, // 11: cs3.storage.provider.v1beta1.ListStorageSpacesResponse.storage_spaces:type_name -> cs3.storage.provider.v1beta1.StorageSpace
	10, // 12: cs3.storage.provider.v1beta1.UpdateStorageSpaceRequest.opaque:type_name -> cs3.types.v1beta1.Opaque
	14, // 13: cs3.storage.provider.v1beta1.UpdateStorageSpaceRequest.storage_space:type_name -> cs3.storage.provider.v1beta1.StorageSpace
	10, // 14: cs3.storage.provider.v1beta1.UpdateStorageSpaceResponse.opaque:type_name -> cs3.types.v1beta1.Opaque
	13, // 15: cs3.storage.provider.v1beta1.UpdateStorageSpaceResponse.status:type_name -> cs3.rpc.v1beta1.Status
	14, // 16: cs3.storage.provider.v1beta1.UpdateStorageSpaceResponse.storage_space:type_name -> cs3.storage.provider.v1beta1.StorageSpace
	10, // 17: cs3.storage.provider.v1beta1.DeleteStorageSpaceRequest.opaque:type_name -> cs3.types.v1beta1.Opaque
	16, // 18: cs3.storage.provider.v1beta1.DeleteStorageSpaceRequest.id:type_name -> cs3.storage.provider.v1beta1.StorageSpaceId
	10, // 19: cs3.storage.provider.v1beta1.DeleteStorageSpaceResponse.opaque:type_name -> cs3.types.v1beta1.Opaque
	13, // 20: cs3.storage.provider.v1beta1.DeleteStorageSpaceResponse.status:type_name -> cs3.rpc.v1beta1.Status
	0,  // 21: cs3.storage.provider.v1beta1.ListStorageSpacesRequest.Filter.type:type_name -> cs3.storage.provider.v1beta1.ListStorageSpacesRequest.Filter.Type
	16, // 22: cs3.storage.provider.v1beta1.ListStorageSpacesRequest.Filter.id:type_name -> cs3.storage.provider.v1beta1.StorageSpaceId
	17, // 23: cs3.storage.provider.v1beta1.ListStorageSpacesRequest.Filter.owner:type_name -> cs3.identity.user.v1beta1.UserId
	17, // 24: cs3.storage.provider.v1beta1.ListStorageSpacesRequest.Filter.user:type_name -> cs3.identity.user.v1beta1.UserId
	1,  // 25: cs3.storage.provider.v1beta1.SpacesAPI.CreateStorageSpace:input_type -> cs3.storage.provider.v1beta1.CreateStorageSpaceRequest
	3,  // 26: cs3.storage.provider.v1beta1.SpacesAPI.ListStorageSpaces:input_type -> cs3.storage.provider.v1beta1.ListStorageSpacesRequest
	5,  // 27: cs3.storage.provider.v1beta1.SpacesAPI.UpdateStorageSpace:input_type -> cs3.storage.provider.v1beta1.UpdateStorageSpaceRequest
	7,  // 28: cs3.storage.provider.v1beta1.SpacesAPI.DeleteStorageSpace:input_type -> cs3.storage.provider.v1beta1.DeleteStorageSpaceRequest
	2,  // 29: cs3.storage.provider.v1beta1.SpacesAPI.CreateStorageSpace:output_type -> cs3.storage.provider.v1beta1.CreateStorageSpaceResponse
	4,  // 30: cs3.storage.provider.v1beta1.SpacesAPI.ListStorageSpaces:output_type -> cs3.storage.provider.v1beta1.ListStorageSpacesResponse
	6,  // 31: cs3.storage.provider.v1beta1.SpacesAPI.UpdateStorageSpace:output_type -> cs3.storage.provider.v1beta1.UpdateStorageSpaceResponse
	8,  // 32: cs3.storage.provider.v1beta1.SpacesAPI.DeleteStorageSpace:output_type -> cs3.storage.provider.v1beta1.DeleteStorageSpaceResponse
	29, // [29:33] is the sub-list for method output_type
	25, // [25:29] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_cs3_storage_provider_v1beta1_spaces_api_proto_init() }
func file_cs3_storage_provider_v1beta1_spaces_api_proto_init() {
	if File_cs3_storage_provider_v1beta1_spaces_api_proto != nil {
		return
	}
	file_cs3_storage_provider_v1beta1_resources_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStorageSpaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStorageSpaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStorageSpacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStorageSpacesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStorageSpaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStorageSpaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStorageSpaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStorageSpaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStorageSpacesRequest_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ListStorageSpacesRequest_Filter_Id)(nil),
		(*ListStorageSpacesRequest_Filter_Owner)(nil),
		(*ListStorageSpacesRequest_Filter_SpaceType)(nil),
		(*ListStorageSpacesRequest_Filter_Path)(nil),
		(*ListStorageSpacesRequest_Filter_User)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cs3_storage_provider_v1beta1_spaces_api_proto_goTypes,
		DependencyIndexes: file_cs3_storage_provider_v1beta1_spaces_api_proto_depIdxs,
		EnumInfos:         file_cs3_storage_provider_v1beta1_spaces_api_proto_enumTypes,
		MessageInfos:      file_cs3_storage_provider_v1beta1_spaces_api_proto_msgTypes,
	}.Build()
	File_cs3_storage_provider_v1beta1_spaces_api_proto = out.File
	file_cs3_storage_provider_v1beta1_spaces_api_proto_rawDesc = nil
	file_cs3_storage_provider_v1beta1_spaces_api_proto_goTypes = nil
	file_cs3_storage_provider_v1beta1_spaces_api_proto_depIdxs = nil
}
