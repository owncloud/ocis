---
services:
  traefik:
    networks:
      ocis-net:
        aliases:
          - ${OCIS_OCM_NEXT_DOMAIN:-ocis.ocm.next.owncloud.test}

  ocis-ocm-next:
    image: ${OCIS_DOCKER_IMAGE:-owncloud/ocis}:${OCIS_DOCKER_TAG:-latest}
    networks:
      ocis-net:
    entrypoint:
      - /bin/sh
    # run ocis init to initialize a configuration file with random secrets
    # it will fail on subsequent runs, because the config file already exists
    # therefore we ignore the error and then start the ocis server
    command: ["-c", "ocis init || true; ocis server"]
    environment:
      # enable the notifications service as it is not started automatically
      OCIS_ADD_RUN_SERVICES: ${START_ADDITIONAL_SERVICES}
      OCIS_URL: https://${OCIS_OCM_NEXT_DOMAIN:-ocis.ocm.next.owncloud.test}
      OCIS_LOG_LEVEL: ${LOG_LEVEL:-info}
      OCIS_LOG_COLOR: "${LOG_PRETTY:-false}"
      OCIS_LOG_PRETTY: "${LOG_PRETTY:-false}"
      # do not use SSL between Traefik and oCIS
      PROXY_TLS: "false"
      # make the REVA gateway accessible to the app drivers
      GATEWAY_GRPC_ADDR: 0.0.0.0:9142
      # INSECURE: needed if oCIS / Traefik is using self generated certificates
      OCIS_INSECURE: "${INSECURE:-false}"
      # basic auth (not recommended, but needed for eg. WebDav clients that do not support OpenID Connect)
      PROXY_ENABLE_BASIC_AUTH: "${PROXY_ENABLE_BASIC_AUTH:-false}"
      # admin user password
      IDM_ADMIN_PASSWORD: "${ADMIN_PASSWORD:-admin}" # this overrides the admin password from the configuration file
      # demo users
      IDM_CREATE_DEMO_USERS: "${DEMO_USERS:-false}"
      # make the registry available to the app provider containers
      MICRO_REGISTRY_ADDRESS: 127.0.0.1:9233
      NATS_NATS_HOST: 0.0.0.0
      NATS_NATS_PORT: 9233
      PROXY_CSP_CONFIG_FILE_LOCATION: /etc/ocis/csp-ocm-next.yaml
      # enable to allow using the banned passwords list
      OCIS_PASSWORD_POLICY_BANNED_PASSWORDS_LIST: banned-password-list.txt
      # ocm configuration
      OCIS_ENABLE_OCM: true
      OCM_OCM_INVITE_MANAGER_INSECURE: true
      OCM_OCM_SHARE_PROVIDER_INSECURE: true
      OCM_OCM_STORAGE_PROVIDER_INSECURE: true
      OCM_OCM_PROVIDER_AUTHORIZER_PROVIDERS_FILE: /etc/ocm/providers.json
      WEB_UI_CONFIG_FILE: /etc/ocis/ocis.ocm.next.web.config.json
    volumes:
      - ./config/ocis/app-registry.yaml:/etc/ocis/app-registry.yaml
      - ./config/ocis/csp-ocm-next.yaml:/etc/ocis/csp-ocm-next.yaml
      - ./config/ocis/banned-password-list.txt:/etc/ocis/banned-password-list.txt
      - ./config/ocis/ocis.ocm.next.web.config.json:/etc/ocis/ocis.ocm.next.web.config.json:ro
      - ./config/ocis/ocm.providers.json:/etc/ocm/providers.json
      # configure the .env file to use own paths instead of docker internal volumes
      - ${OCIS_OCM_NEXT_CONFIG_DIR:-ocis-ocm-next-config}:/etc/ocis
      - ${OCIS_OCM_NEXT_DATA_DIR:-ocis-ocm-next-data}:/var/lib/ocis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ocis-ocm-next.entrypoints=https"
      - "traefik.http.routers.ocis-ocm-next.rule=Host(`${OCIS_OCM_NEXT_DOMAIN:-ocis.ocm.next.owncloud.test}`)"
      - "traefik.http.routers.ocis-ocm-next.tls.certresolver=http"
      - "traefik.http.routers.ocis-ocm-next.service=ocis-ocm-next"
      - "traefik.http.services.ocis-ocm-next.loadbalancer.server.port=9200"
    logging:
      driver: ${LOG_DRIVER:-local}
    restart: always

volumes:
  ocis-ocm-next-config:
  ocis-ocm-next-data:
